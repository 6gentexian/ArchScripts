#!/bin/bash
#################################################################################
#  CONFIG_FUNCS_TEMPLATE
#  This script creates the script CONFIG_FUNCS - the script used in installing
#  Arch linux.
#  The script reads in the current values for each of the user's customized
#  scripts and pastes them into CONFIG_FUNCS
#
#  Useage: CONFIG_SETUP min  **OR** CONFIG_SETUP reg
#################################################################################

SRC_CONFIG_DIR=~/ARCH/SRC_CONFIG
LOG="${SRC_CONFIG_DIR}/`basename ${0}`_error.log" # LOG FILE


#GLOBAL VARIABLES {{{
  checklist=( 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 )
  # COLORS {{{
    Bold=$(tput bold)
    Underline=$(tput sgr 0 1)
    Reset=$(tput sgr0)
  # Regular Colors
    Red=$(tput setaf 1)
    Green=$(tput setaf 2)
    Yellow=$(tput setaf 3)
    Blue=$(tput setaf 4)
    Purple=$(tput setaf 5)
    Cyan=$(tput setaf 6)
    White=$(tput setaf 7)
  # Bold
    BRed=${Bold}$(tput setaf 1)
    BGreen=${Bold}$(tput setaf 2)
    BYellow=${Bold}$(tput setaf 3)
    BBlue=${Bold}$(tput setaf 4)
    BPurple=${Bold}$(tput setaf 5)
    BCyan=${Bold}$(tput setaf 6)
    BWhite=${Bold}$(tput setaf 7)

    RESET='\e[0m'           # Text Reset
    BBlack='\e[1;30m'       # Black
    BRed='\e[1;31m'         # Red
    BGreen='\e[1;32m'       # Green
    BYellow='\e[1;33m'      # Yellow
    BBlue='\e[1;34m'        # Blue
    BPurple='\e[1;35m'      # Purple
    BCyan='\e[1;36m'        # Cyan
    BWhite='\e[1;37m'       # White
#}}}

#COMMON FUNCTIONS {{{
  error_msg() { #{{{
    local _msg="${1}"
    echo -e "${_msg}"
    exit 1
  } #}}}
  cecho() { #{{{
    echo -e "$1"
    echo -e "$1" >>"$LOG"
    tput sgr0;
  } #}}}
  ncecho() { #{{{
    echo -ne "$1"
    echo -ne "$1" >>"$LOG"
    tput sgr0
  } #}}}
  spinny() { #{{{
    echo -ne "\b${SPIN:i++%${#SPIN}:1}"
  } #}}}
  progress() { #{{{
    ncecho "  ";
    while true; do
      kill -0 $pid &> /dev/null;
      if [[ $? == 0 ]]; then
	spinny
	sleep 0.25
      else
	ncecho "\b\b";
	wait $pid
	retcode=$?
	echo -ne "$pid's retcode: $retcode" >> $LOG
	if [[ $retcode == 0 ]] || [[ $retcode == 255 ]]; then
	  cecho "  SUCCESS"
	else
	  cecho "  FAILED"
	  echo -e "$PKG" >> $PKG_FAIL
	  tail -n 15 $LOG
	fi
	break
      fi
    done
} #}}}

print_line() { #{{{
  printf "%$(tput cols)s\n"|tr ' ' '-'
} #}}}

print_title() { #{{{
  clear
  print_line
  echo -e "# ${Bold}$1${Reset}"
  print_line

  echo ""
} #}}}

is_package_installed() { #{{{
  #check if a package is already installed
  for PKG in $1; do
    pacman -Q $PKG &> /dev/null && return 0;
  done
  return 1
} #}}}

package_install() { #{{{
  #install packages using pacman
  if [[ $AUTOMATIC_MODE -eq 1 || $VERBOSE_MODE -eq 0 ]]; then
    for PKG in ${1}; do
      local _pkg_repo=`pacman -Sp --print-format %r ${PKG} | uniq | sed '1!d'`
      case $_pkg_repo in
	"core")
	  _pkg_repo="${BRed}${_pkg_repo}${Reset}"
	 ;;
	"extra")
	  _pkg_repo="${BYellow}${_pkg_repo}${Reset}"
	 ;;
	"community")
	  _pkg_repo="${BGreen}${_pkg_repo}${Reset}"
	 ;;
	"multilib")
	  _pkg_repo="${BCyan}${_pkg_repo}${Reset}"
	 ;;
	"archlinuxfr")
	  _pkg_repo="${BPurple}${_pkg_repo}${Reset}"
	;;
      esac

      if ! is_package_installed "${PKG}" ; then
	ncecho " ${BBlue}[${Reset}${Bold}X${BBlue}]${Reset} Installing (${_pkg_repo}) ${Bold}${PKG}${Reset} "
	sudo pacman -S --noconfirm ${PKG} >>"$LOG" 2>&1 &
	pid=$!;progress $pid
      else
	cecho " ${BBlue}[${Reset}${Bold}X${BBlue}]${Reset} Installing (${_pkg_repo}) ${Bold}${PKG}${Reset} exists "
      fi
    done
  else
    sudo pacman -S --noconfirm ${1}
  fi
} #}}}

pause_function() { #{{{
  print_line
  if [[ $AUTOMATIC_MODE -eq 0 ]]; then
    read -e -sn 1 -p "Press enter to continue..."
  fi
} #}}}


################################   basic setup   ################################
install_basic_setup(){

    # NEED TO CONFIG pacman.conf BEFORE WE CAN USE packer
    print_title "BASH, Pacman, Xresources scripts ---------------------------"
    create_bashrc
    create_xresources
    create_xinitrc
    pause_function


    print_title "BASH, Pacman, Xresources ---------------------------------"

    print_title "BASH TOOLS - https://wiki.archlinux.org/index.php/Bash"
    sudo pacman -Syy

    package_install "bc mlocate bash-completion pkgstats packer pacmatic"
    pause_function

    print_title "Xorg- https://wiki.archlinux.org/index.php/Xorg"
    package_install "xorg-server xorg-server-utils xorg-xinit xorg-xkill xterm  \
		     xf86-input-libinput xorg-fonts-100dpi xorg-fonts-75dpi \
		     xf86-input-synaptics xf86-input-mouse xf86-input-keyboard \
		     gamin ntp"
    pause_function

    # IS MIN_INSTALL ?
    if [ "$1" = false ]; then
	print_title "PRINTING via CUPS --------------------------------------------"
	package_install "cups cups-pdf system-config-printer cups-filters"
	pause_function
    fi
}
################################   basic setup   ################################

#################################    .bashrc   ##################################
create_bashrc(){

cat > /home/edward/.bashrc << 'EOF'
# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples
#################################################################################
Color_Off='\e[0m'       # Text Reset

# Regular Colors
Black='\e[0;30m'        # Black
Red='\e[0;31m'          # Red
Green='\e[0;32m'        # Green
Yellow='\e[0;33m'       # Yellow
Blue='\e[0;34m'         # Blue
Purple='\e[0;35m'       # Purple
Cyan='\e[0;36m'         # Cyan
White='\e[0;37m'        # White

# Bold
BBlack='\e[1;30m'       # Black
BRed='\e[1;31m'         # Red
BGreen='\e[1;32m'       # Green
BYellow='\e[1;33m'      # Yellow
BBlue='\e[1;34m'        # Blue
BPurple='\e[1;35m'      # Purple
BCyan='\e[1;36m'        # Cyan
BWhite='\e[1;37m'       # White

# Underline
UBlack='\e[4;30m'       # Black
URed='\e[4;31m'         # Red
UGreen='\e[4;32m'       # Green
UYellow='\e[4;33m'      # Yellow
UBlue='\e[4;34m'        # Blue
UPurple='\e[4;35m'      # Purple
UCyan='\e[4;36m'        # Cyan
UWhite='\e[4;37m'       # White

# Background
On_Black='\e[40m'       # Black
On_Red='\e[41m'         # Red
On_Green='\e[42m'       # Green
On_Yellow='\e[43m'      # Yellow
On_Blue='\e[44m'        # Blue
On_Purple='\e[45m'      # Purple
On_Cyan='\e[46m'        # Cyan
On_White='\e[47m'       # White

# High Intensity
IBlack='\e[0;90m'       # Black
IRed='\e[0;91m'         # Red
IGreen='\e[0;92m'       # Green
IYellow='\e[0;93m'      # Yellow
IBlue='\e[0;94m'        # Blue
IPurple='\e[0;95m'      # Purple
ICyan='\e[0;96m'        # Cyan
IWhite='\e[0;97m'       # White

# Bold High Intensity
BIBlack='\e[1;90m'      # Black
BIRed='\e[1;91m'        # Red
BIGreen='\e[1;92m'      # Green
BIYellow='\e[1;93m'     # Yellow
BIBlue='\e[1;94m'       # Blue
BIPurple='\e[1;95m'     # Purple
BICyan='\e[1;96m'       # Cyan
BIWhite='\e[1;97m'      # White

# High Intensity backgrounds
On_IBlack='\e[0;100m'   # Black
On_IRed='\e[0;101m'     # Red
On_IGreen='\e[0;102m'   # Green
On_IYellow='\e[0;103m'  # Yellow
On_IBlue='\e[0;104m'    # Blue
On_IPurple='\e[0;105m'  # Purple
On_ICyan='\e[0;106m'    # Cyan
On_IWhite='\e[0;107m'   # White

RESET='\e[0m'           # Text Reset
###########################################
# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# don't put duplicate lines in the history. See bash(1) for more options
# ... or force ignoredups and ignorespace
HISTCONTROL=ignoredups:ignorespace

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=10000
HISTFILESIZE=20000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-256color)
	color_prompt=yes
	;;
esac


## - COLOR PROMPT - #############################################################
PS1='\[\e[1;34m\]\w\[\e[m\] \[\e[1;32m\]\$\[\e[m\] \[\e[1;37m\]'

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
	;;
	*)
    ;;
esac


# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then

    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi


# some more ls aliases ----- ####################################################
alias ll='ls -alF'
alias la='ls -A'
alias lc='ls -CF'

alias home='cd ~'
alias em='emacs -nw'
alias EM='em ~/.emacs'
alias suem='sudo emacs -nw'

alias RHOME='cd /usr/lib/R/'
alias RPROFILE='em ~/Dropbox/R/Rprofile.site'
alias RENVIRON='em ~/Dropbox/R/Renviron'

alias rebootWeb='sudo dhclient'
alias BASHRC='em ~/.bashrc'
alias SOURCE='source ~/.bashrc'
alias REBOOT='systemctl reboot'
alias POWEROFF='systemctl poweroff'
alias terminator_ebg='terminator -m -b -l ebg &'

alias te='top -u edward'
alias tt='top'
alias cls='clear'

# hint to run wine #
# wine "/home/edward/.wine/drive_c/Program Files (x86)/WebEx/WebEx/500/nbrplayer.exe"

#alias PRINT='lpr -P "Dell Laser Printer 1710n"'
#alias PRINT='lpr -p -P "delllaserprinter1710"'

## ubuntu specific--Make it shorter
#alias INSTALL="sudo apt-get install -y"
#alias UPDATE="sudo apt-get update"
#alias UPGRADE="sudo apt-get upgrade"
#alias UNINSTALL="sudo apt-get purge"
## openSuSE specific--Make it shorter
#alias UPDATE="sudo zypper update "
#alias REFRESH="sudo zypper refresh "
#alias REMOVE="sudo zypper remove "

# arch specific commands
alias UPDATE="sudo ~/bin/update.pacman.sh"
alias REFRESH="sudo pacman -Syy "
alias REMOVE="sudo pacman -Rns "
alias PAC="sudo pacman -S "
alias UP="sudo pacman -Su "
alias SYSLOG='tail -f /var/log/Xorg.0.log'
alias UPXT='xrdb -merge ~/.Xresources'
#alias MAKEPKG="makepkg --clean --cleanbuild"

# Compiler output
alias GCC_ECHO="echo \"int main() { return 0; }\" | gcc -march=native -v -Q -x c - 2>&1"
alias GCC_HELP="gcc -v -Q  -march=native --help=target"

# navigation
alias CD="cd ../"
alias CDCD="cd ../../"

# Use human-readable filesizes
alias df="df -h"
alias du="du -ch --max-depth=1"
alias SIZE="du -ch --max-depth=1 | sort -h; echo 'du -ch --max-depth=1 | sort -h'"
alias DIFF="diff --suppress-common-lines --side-by-side --recursive"


alias SSH_WEG='ssh WEG@192.168.1.7'
#alias SSH_PIE='ssh -p 2222 pi@192.168.1.9'
alias ECLIPSE='~/JAVA/eclipse/eclipse -vm /usr/lib/jvm/latest/jre/bin &'


alias TWS3="cd /home/edward/Dropbox/FX/TWS/IBJts/; java -cp jts.jar:total.2013.jar:hsqldb.jar:jcommon-1.0.12.jar:jfreechart-1.0.9.jar:jhall.jar:other.jar:rss.jar -Xmx2048M  jclient.LoginFrame ."
alias TWS="cd /home/edward/TWS/IBJts; java -cp jts.jar:total.2013.jar -Xmx512M jclient.LoginFrame ."
alias TWS2="cd /home/edward/Downloads/IBJts; java -cp jts.jar:total.2013.jar -Xmx1536M -XX:MaxPermSize=512M jclient.LoginFrame ."



function SCP()
{
    # REMINDER FOR SCP SYNTAX
    echo 'scp   FROM   TO'
    echo ''
    echo 'scp -P 1235 ~/LOCAL_FILE  myuser@remoteserver.com:/REMOTE_DIR'
    echo 'scp -P 1235 myuser@remoteserver:/REMOTE_FILE  ~/local_dir'
    echo ''
}

#export JAVA_HOME=$JAVA_HOME:/usr/lib/jvm/latest/jre
function TAIL()
{
  journalctl | tail -n $1
}
function lm()
{
  ls -al $1 --color | more
}
function sulm()
{
  sudo ls -al $1 --color | more
}

function pdfextract()
{
  # this function uses 3 arguments:
  #     $1 is the first page of the range to extract: pXX
  #     $2 is the last page of the range to extract: pYY
  #     $3 is the input file: inputfile
  #     output file will be named "inputfile_pXX-pYY.pdf"
  gs -sDEVICE=pdfwrite -dNOPAUSE -dBATCH -dSAFER \
	      -dFirstPage=${1} \
	      -dLastPage=${2} \
	      -sOutputFile=${3%.pdf}_p${1}-p${2}.pdf \
	     ${3}
}

extract () {
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2)  tar xvjf $1     ;;
      *.tar.gz)    tar xvzf $1    ;;
      *.bz2)       bunzip2 $1     ;;
      *.rar)       unrar x $1     ;;
      *.gz)        gunzip $1      ;;
      *.tar)       tar xvf $1     ;;
      *.tbz2)      tar xvjf $1    ;;
      *.tgz)       tar xvzf $1    ;;
      *.zip)       unzip $1       ;;
      *.Z)         uncompress $1  ;;
      *.7z)        7z x $1        ;;
      *)           echo "don't know how to extract '$1'..." ;;
    esac

    echo "'$1' is not a valid file!"
  fi
}


function ff()
{
#    # this function uses 3 arguments:
#    #     $1 is the ABSOLUTE search path with quotes
#    #     $2 is the file/dir name, e.g. "*hello_world.c" with quotes
#    #     $3 is the tag for file or directory, 'f' or 'd' without quotes
#    #     function calls sudo and the 'find' function
#    #     2> file redirects stderr to file
    echo 'sudo find "$1" -iname "$2" -type "$3" -not -path "/archive/*" -not -path "/backup/*" 2>dev/null'
    sudo find "$1" -iname "$2" -type "$3" -not -path "/archive/*" -not -path "/backup/*" 2>/dev/null
}


# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
  . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
  . /etc/bash_completion
fi

##  auto-start conky
#conky_ps='ps -e | grep conky'
#if [ "$conky_ps" = '' ]; then
#   . ~/bin/conky_start
#    sleep 2
#    clear
#fi

xset -dpms; xset s off



# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes
##if [ -n "$force_color_prompt" ]; then
##    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
# We have color support; assume it's compliant with Ecma-48
# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
# a case would tend to support setf rather than setaf.)
##  color_prompt=yes
##    else
##    color_prompt=
##    fi
##fi

##if [ "$color_prompt" = yes ]; then
##    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
##else
##    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
##fi
##unset color_prompt force_color_prompt

## - COLOR PROMPT - #
##PS1='\[\e[01;32m\]\u@\[\e[1;33m\]\h\[\e[01;32m\]: \[\e[1;34m\]\w\[\e[m\] \[\e[1;32m\]\$\[\e[m\] \[\e[1;37m\]'

#case "$TERM" in
#xterm*)
#  xterm -bg Black
#  xterm -fg Green
##  xterm*cursorColor:              LightBlue
##  xterm*pointerShape:             arrow
##  xterm*pointerColor:             blue
#  ;;
#esac

EOF

print_title ".BASH_PROFILE ----------------------------------------------------"
cat > /home/edward/.bash_profile << 'EOF'
## bash_profile
[[ -z $DISPLAY && $XDG_VTNR -eq 1 ]] && exec startx


#Do not set the TERM variable from your ~/.bashrc or ~/.bash_profile or similar file
export R_HOME=/usr/lib64/R
export TMPDIR=/home/edward/TMP

###export LD_LIBRARY_PATH=/opt/wx/2.8/lib
###export PYTHONPATH=/usr/lib/python2.7  #$PYTHONPATH:/home/edward/Python/wxPython-src-2.8.12.1/wxPython
###export PATH=$PATH:$PYTHONPATH

export PATH=$PATH:/usr/lib/rstudio/bin
export PATH=$PATH:~/bin
export JAVA_HOME=/usr/lib/jvm/default
#export PATH=$PATH:$JAVA_HOME/bin

export CLASSPATH=$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JAVA_HOME/jre/lib/rt.jar
export EDITOR=/usr/bin/emacs
export LANG=en_US.UTF-8
export INPUTRC=~/.inputrc

EOF
}
#################################    .bashrc   #################################

###############################    .Xresources   ###############################
create_xresources(){

cat > /home/edward/.Xresources << 'EOF'
!! Xterm ----------------------------------------------------------------------
xterm*VT100.geometry:	120x67+750+0
xterm*utf8:             1
xterm*faceName:		Terminus:style=Regular:size=8
xterm*font:             -*-terminus-medium-*-*-*-18-*-*-*-*-*-iso10646-*
xterm*foreground:       white
xterm*background:       black
xterm*termName:         xterm-256color
xterm*saveLines:        91200
xterm*rightScrollBar:   true
xterm*toolBar:          false
xterm*locale:           true
xterm*metaSendsEscape:  true
xterm*dynamicColors:    true
xterm*cursorColor:      yellow
xterm*cursorBlink:      true
xterm*scrollKey:        true


Xcursor*theme: vanilla-dmz
Xcursor*size: 12

! UI elements
!Emacs.menuBar: 0
!Emacs.toolBar: 0
!Emacs.verticalScrollBars: off
! Font settings
Emacs.FontBackend: xft,x
!Emacs.font: Inconsolata LGC:size=16
Emacs.font: Monospace-12

EOF
}
###############################    .Xresources   ###############################

#################################    .xinitrc   ################################
create_xinitrc(){

cat > /home/edward/.xinitrc << 'EOF'
#!/bin/sh
#
# ~/.xinitrc
#
# Executed by startx (run your window manager from here)

if [ -d /etc/X11/xinit/xinitrc.d ]; then
  for f in /etc/X11/xinit/xinitrc.d/*; do
    [ -x "$f" ] && . "$f"
  done
  unset f
fi


# make the xterm prompt etc prettier than the crap default
[[ -f ~/.Xresources ]] && xrdb -merge ~/.Xresources



exec openbox-session



EOF
}
#################################    .xinitrc   ################################


###########################    general system tools  ############################
install_system_tools(){

  print_title "SYSTEM TOOLS ---------------------------------------------------"
  package_install "gcc-fortran os-prober sudo time ttf-bitstream-vera \
		   wget xdg-user-dirs auctex aspell-en"
  pause_function

  print_title "ARCH BUILD SYSTEM (ABS) TOOLS  -----------------------------------"
  package_install "abs xmlto docbook-xsl kmod inetutils qt4"
  pause_function

  # IS MIN_INSTALL ?
  if [ "$1" = false ]; then

    print_title "SYSTEM TOOLS ---------------------------------------------------"
    package_install "cpupower lm_sensors lshw lvm2  inxi hddtemp gvfs gvfs-afc \
		     hwdetect hwinfo xsensors xdotool psutils rsync pkg-config"
    pause_function

  fi
}
###########################    general system tools  ###########################


##################################     io     ##################################
config_io(){

cat > ~/60-schedulers.rules << 'EOF'
# set deadline scheduler for non-rotating disks
ACTION=="add|change", KERNEL=="sd[a-z]", ATTR{queue/rotational}=="0", ATTR{queue/scheduler}="deadline"

# set deadline scheduler for rotating disks
ACTION=="add|change", KERNEL=="sd[a-z]", ATTR{queue/rotational}=="1", ATTR{queue/scheduler}="cfq"
EOF

sudo mv ~/60-schedulers.rules /etc/udev/rules.d/
sudo chown root:root /etc/udev/rules.d/60-schedulers.rules
}
##################################     io     ##################################


##################################    swap    ##################################
config_swap(){

cat > ~/99-sysctl.conf << 'EOF'
vm.swappiness=1
vm.vfs_cache_pressure=50
EOF

cat > ~/swappiness << 'EOF'
1
EOF

sudo mv ~/99-sysctl.conf /etc/sysctl.d/
sudo chown root:root /etc/sysctl.d/99-sysctl.conf

sudo mv /proc/sys/vm/swappiness /proc/sys/vm/swappiness.orig
sudo mv ~/swappiness /proc/sys/vm/
sudo chown root:root /proc/sys/vm/swappiness
}
##################################    swap    ##################################


################################    user tools    ##############################
install_user_tools(){

    print_title "USER TOOLS ---------------------------------------------------"
    package_install "filezilla ghostscript galculator git"
    pause_function

  # IS MIN_INSTALL ?
  if [ "$1" = false ]; then
    print_title "USER TOOLS ---------------------------------------------------"
    package_install "brasero chromium feh gimp gparted alsa-plugins alsa-utils \
		     pulseaudio pulseaudio-alsa gsl gv hplip mongodb shutter \
		     xsane"
    pause_function
  fi

}
################################    user tools    #############################


###############################    scripting tools  ############################
install_scripting_tools(){

  print_title "SCRIPTING TOOLS ----------------------------------------------"
  package_install "python python2 php"
  pause_function

  # IS MIN_INSTALL ?
  if [ "$1" = false ]; then
    print_title "SCRIPTING TOOLS ----------------------------------------------"
    package_install "gawk python-nose python-numpy python-pip \
		       python-setuptools python2-nose python2-numpy \
		       python2-pip python2-setuptools wxpython"
    pause_function
  fi

}
###############################    scripting tools  ############################


################################    filetools   ################################
install_filetools(){

  print_title "FILE TOOLS -------------------------------"
  package_install "autofs file filesystem sysfsutils"
  pause_function


  # IS MIN_INSTALL ?
  if [ "$1" = false ]; then
      print_title "FILE TOOLS -------------------------------"
      package_install "dosfstools e2fsprogs exfat-utils fuse fuse-exfat ntfs-3g"
      pause_function
  fi

}
################################    filetools   ################################


###########################    network/compression   ###########################
install_network_compression(){

  print_title "NETWORK AND COMPRESSION TOOLS -------------------------------"
  package_install "nss-mdns unzip zip avahi"
  pause_function

  # IS MIN_INSTALL ?
  if [ "$1" = false ]; then
      print_title "NETWORK AND COMPRESSION TOOLS -------------------------------"
      package_install "xz bzip2 iproute2 p7zip traceroute unrar"
      pause_function
  fi
}
###########################    network/compression   ############################


#################################    Openbox    ################################
config_openbox(){

  mkdir -p ~/.config/openbox/

  print_title "OPENBOX - http://wiki.archlinux.org/index.php/Openbox"
  package_install "openbox obconf obmenu menumaker archlinux-xdg-menu libxslt \
		   lxappearance-obconf oblogout numix-themes leafpad xcompmgr \
		   numlockx spacefm lsof opera tint2 nitrogen terminator"
  pause_function

  print_title "Terminator Config and window scripts  -------------------------"
    config_terminator
    config_terminator_windows
  pause_function

  # IS MIN_INSTALL ?
  if [ "$1" = false ]; then
      print_title "Web browser, email client, Openbox goodies  ---------------"
      package_install "thunderbird turpial conky ruby lua"
      pause_function
  fi

  print_title "OPENBOX Files: menu.xml, rc.xml, autostart, xinitrc, ----------"
    create_menu.xml
    create_rc.xml
    create_autostart
    config_tint2
    create_openbox-pipemenu
  pause_function

}
#################################    Openbox    ################################

#################################    menu.xml   ################################
create_menu.xml(){

cat > /home/edward/.config/openbox/menu.xml << 'EOF'
<?xml version="1.0" encoding="utf-8"?>
<openbox_menu xmlns="http://openbox.org/3.4/menu">
	<menu execute="bash /home/edward/bin/openbox-pipemenu" id="apps-menu" label="Applications"/>
	<menu id="ob-menu" label="Openbox Preferences">
		<item label="Openbox Configuration Manager">
		  <action name="Execute">
		    <command>obconf</command>
		      <startupnotify>
			<enabled>yes</enabled>
		      </startupnotify>
		  </action>
		</item>
	<!--	<item label="Reconfigure Openbox">
		  <action name="Reconfigure"/>
		</item>
	-->
    </menu>


    <menu id="apps-term-menu" label="Terminals">
      <item label="Terminator">
	<action name="Execute">
	<command>terminator -m -b -l ebg; echo "HW"</command>
	<startupnotify><enabled>yes</enabled></startupnotify>
	</action>
      </item>
<!--      <item label="Konsole">
	<action name="Execute">
	<command>konsole</command>
	<startupnotify><enabled>yes</enabled></startupnotify>
	</action>
      </item>
-->
      <item label="XTerm">
	<action name="Execute">
	<command>xterm</command>
	<startupnotify><enabled>yes</enabled></startupnotify>
	</action>
      </item>
    </menu>

    <menu id="apps-edit-menu" label="Editors">
      <item label="GEdit">
	<action name="Execute">
	  <command>gedit</command>
	  <startupnotify><enabled>yes</enabled></startupnotify>
	</action>
      </item>
      <item label="Eclipse">
	<action name="Execute">
	  <command>~/JAVA/eclipse/eclipse -vm /usr/lib/jvm/latest/jre/bin</command>
	  <startupnotify><enabled>yes</enabled></startupnotify>
	</action>
      </item>
    </menu>

    <menu id="apps-edit-menu" label="Spreadsheet">
      <item label="LibreOffice Spreadsheet">
	<action name="Execute">
	  <command>soffice --calc</command>
	  <startupnotify><enabled>yes</enabled></startupnotify>
	</action>
      </item>
    </menu>

    <item label="Calculator">
      <action name="Execute">
	<command>galculator</command>
	<startupnotify><enabled>yes</enabled></startupnotify>
      </action>
    </item>


    <menu id="root-menu" label="Openbox 3">
	<separator label="Openbox 3"/>
	  <menu id="apps-menu"/>
	  <separator/>
      <menu id="apps-term-menu"/>
	  <separator/>
      <menu id="apps-edit-menu"/>
	  <separator/>
	  <separator/>
	  <menu id="ob-menu"/>
	      <separator/>
	  <item label="Log Out">
	    <action name="Exit">
	      <prompt>yes</prompt>
	    </action>
	  </item>

	<separator/>
	<separator/>
	<separator/>

      <item label="Shutdown">
	<action name="Execute">
	  <command>systemctl poweroff</command>
	</action>
      </item>
      <item label="Reboot">
	<action name="Execute">
	  <command>systemctl reboot</command>
	</action>
      </item>

    </menu>
</openbox_menu>

EOF
}
#################################    menu.xml   ################################

##################################    rc.xml   #################################
create_rc.xml(){

cat > /home/edward/.config/openbox/rc.xml << 'EOF'
<?xml version="1.0"?>
<!-- Do not edit this file, it will be overwritten on install.
	Copy the file to $HOME/.config/openbox/ instead. -->
<openbox_config xmlns="http://openbox.org/3.4/rc" xmlns:xi="http://www.w3.org/2001/XInclude">
  <resistance>
    <strength>10</strength>
    <screen_edge_strength>20</screen_edge_strength>
  </resistance>
  <focus>
    <focusNew>yes</focusNew>
    <!-- always try to focus new windows when they appear. other rules do
       apply -->
    <followMouse>no</followMouse>
    <!-- move focus to a window when you move the mouse into it -->
    <focusLast>yes</focusLast>
    <!-- focus the last used window when changing desktops, instead of the one
       under the mouse pointer. when followMouse is enabled -->
    <underMouse>no</underMouse>
    <!-- move focus under the mouse, even when the mouse is not moving -->
    <focusDelay>200</focusDelay>
    <!-- when followMouse is enabled, the mouse must be inside the window for
       this many milliseconds (1000 = 1 sec) before moving focus to it -->
    <raiseOnFocus>no</raiseOnFocus>
    <!-- when followMouse is enabled, and a window is given focus by moving the
       mouse into it, also raise the window -->
  </focus>
  <placement>
    <policy>Smart</policy>
    <!-- 'Smart' or 'UnderMouse' -->
    <monitor>Primary</monitor>
    <!-- with Smart placement on a multi-monitor system, try to place new windows
       on: 'Any' - any monitor, 'Mouse' - where the mouse is, 'Active' - where
       the active window is, 'Primary' - only on the primary monitor -->
    <primaryMonitor>1</primaryMonitor>
    <!-- The monitor where Openbox should place popup dialogs such as the
       focus cycling popup, or the desktop switch popup.  It can be an index
       from 1, specifying a particular monitor.  Or it can be one of the
       following: 'Mouse' - where the mouse is, or
		  'Active' - where the active window is -->
  </placement>
  <theme>
    <name>Mikachu</name>
    <titleLayout>NLIMC</titleLayout>
  <!--
      available characters are NDSLIMC, each can occur at most once.
      N: window icon
      L: window label (AKA title).
      I: iconify
      M: maximize
      C: close
      S: shade (roll up/down)
      D: omnipresent (on all desktops).
  -->
    <keepBorder>yes</keepBorder>
    <animateIconify>yes</animateIconify>
    <font place="ActiveWindow">
      <name>sans</name>
      <size>8</size>
      <!-- font size in points -->
      <weight>bold</weight>
      <!-- 'bold' or 'normal' -->
      <slant>normal</slant>
      <!-- 'italic' or 'normal' -->
    </font>
    <font place="InactiveWindow">
      <name>Sans</name>
      <size>8</size>
      <!-- font size in points -->
      <weight>Bold</weight>
      <!-- 'bold' or 'normal' -->
      <slant>Normal</slant>
      <!-- 'italic' or 'normal' -->
    </font>
    <font place="MenuHeader">
      <name>sans</name>
      <size>9</size>
      <!-- font size in points -->
      <weight>normal</weight>
      <!-- 'bold' or 'normal' -->
      <slant>normal</slant>
      <!-- 'italic' or 'normal' -->
    </font>
    <font place="MenuItem">
      <name>sans</name>
      <size>9</size>
      <!-- font size in points -->
      <weight>normal</weight>
      <!-- 'bold' or 'normal' -->
      <slant>normal</slant>
      <!-- 'italic' or 'normal' -->
    </font>
    <font place="ActiveOnScreenDisplay">
      <name>sans</name>
      <size>9</size>
      <!-- font size in points -->
      <weight>bold</weight>
      <!-- 'bold' or 'normal' -->
      <slant>normal</slant>
      <!-- 'italic' or 'normal' -->
    </font>
    <font place="InactiveOnScreenDisplay">
      <name>sans</name>
      <size>9</size>
      <!-- font size in points -->
      <weight>bold</weight>
      <!-- 'bold' or 'normal' -->
      <slant>normal</slant>
      <!-- 'italic' or 'normal' -->
    </font>
  </theme>
  <desktops>
    <!-- this stuff is only used at startup, pagers allow you to change them
       during a session

       these are default values to use when other ones are not already set
       by other applications, or saved in your session

       use obconf if you want to change these without having to log out
       and back in -->
    <number>6</number>
    <firstdesk>1</firstdesk>
    <names>
      <name>Web</name>
      <name>Code</name>
      <name>Mail</name>
      <name>FM</name>
      <name>R</name>
      <name>Python</name>
    </names>
    <popupTime>225</popupTime>
    <!-- The number of milliseconds to show the popup for when switching
       desktops.  Set this to 0 to disable the popup. -->
  </desktops>
  <resize>
    <drawContents>yes</drawContents>
    <popupShow>Nonpixel</popupShow>
    <!-- 'Always', 'Never', or 'Nonpixel' (xterms and such) -->
    <popupPosition>Center</popupPosition>
    <!-- 'Center', 'Top', or 'Fixed' -->
    <popupFixedPosition>
      <!-- these are used if popupPosition is set to 'Fixed' -->
      <x>10</x>
      <!-- positive number for distance from left edge, negative number for
	 distance from right edge, or 'Center' -->
      <y>10</y>
      <!-- positive number for distance from top edge, negative number for
	 distance from bottom edge, or 'Center' -->
    </popupFixedPosition>
  </resize>
  <!-- You can reserve a portion of your screen where windows will not cover when
     they are maximized, or when they are initially placed.
     Many programs reserve space automatically, but you can use this in other
     cases. -->
  <margins>
    <top>0</top>
    <bottom>0</bottom>
    <left>0</left>
    <right>0</right>
  </margins>
  <dock>
    <position>TopLeft</position>
    <!-- (Top|Bottom)(Left|Right|)|Top|Bottom|Left|Right|Floating -->
    <floatingX>0</floatingX>
    <floatingY>0</floatingY>
    <noStrut>no</noStrut>
    <stacking>Above</stacking>
    <!-- 'Above', 'Normal', or 'Below' -->
    <direction>Vertical</direction>
    <!-- 'Vertical' or 'Horizontal' -->
    <autoHide>no</autoHide>
    <hideDelay>300</hideDelay>
    <!-- in milliseconds (1000 = 1 second) -->
    <showDelay>300</showDelay>
    <!-- in milliseconds (1000 = 1 second) -->
    <moveButton>Middle</moveButton>
    <!-- 'Left', 'Middle', 'Right' -->
  </dock>
  <keyboard>
    <chainQuitKey>C-g</chainQuitKey>
    <!-- Keybindings for desktop switching -->
    <keybind key="C-A-Left">
      <action name="GoToDesktop">
	<to>left</to>
	<wrap>no</wrap>
      </action>
    </keybind>
    <keybind key="C-A-Right">
      <action name="GoToDesktop">
	<to>right</to>
	<wrap>no</wrap>
      </action>
    </keybind>
    <keybind key="A-Up">
      <action name="Execute">
	<command>xdotool key --clearmodifiers Page_Up</command>
      </action>
    </keybind>
    <keybind key="A-Down">
      <action name="Execute">
	<command>xdotool key --clearmodifiers Page_Down</command>
      </action>
    </keybind>
    <keybind key="C-A-Up">
      <action name="Execute">
	<command>xdotool key --clearmodifiers Home</command>
      </action>
    </keybind>
    <keybind key="C-A-Down">
      <action name="Execute">
	<command>xdotool key --clearmodifiers End</command>
      </action>
    </keybind>
    <keybind key="S-BackSpace">
      <action name="Execute">
	<command>xdotool key --clearmodifiers Delete</command>
      </action>
    </keybind>
<!--    <keybind key="C-A-Up">
      <action name="GoToDesktop">
	<to>up</to>
	<wrap>no</wrap>
      </action>
    </keybind>
    <keybind key="C-A-Down">
      <action name="GoToDesktop">
	<to>down</to>
	<wrap>no</wrap>
      </action>
      </keybind>
-->
    <keybind key="S-A-Left">
      <action name="SendToDesktop">
	<to>left</to>
	<wrap>no</wrap>
      </action>
    </keybind>
    <keybind key="S-A-Right">
      <action name="SendToDesktop">
	<to>right</to>
	<wrap>no</wrap>
      </action>
    </keybind>
    <keybind key="S-A-Up">
      <action name="SendToDesktop">
	<to>up</to>
	<wrap>no</wrap>
      </action>
    </keybind>
    <keybind key="S-A-Down">
      <action name="SendToDesktop">
	<to>down</to>
	<wrap>no</wrap>
      </action>
    </keybind>
    <keybind key="W-F1">
      <action name="GoToDesktop">
	<to>1</to>
      </action>
    </keybind>
    <keybind key="W-F2">
      <action name="GoToDesktop">
	<to>2</to>
      </action>
    </keybind>
    <keybind key="W-F3">
      <action name="GoToDesktop">
	<to>3</to>
      </action>
    </keybind>
    <keybind key="W-F4">
      <action name="GoToDesktop">
	<to>4</to>
      </action>
    </keybind>
    <keybind key="W-d">
      <action name="ToggleShowDesktop"/>
    </keybind>
    <!-- Keybindings for windows
    <keybind key="A-F4">
      <action name="Close"/>
    </keybind>
    <keybind key="A-Escape">
      <action name="Lower"/>
      <action name="FocusToBottom"/>
      <action name="Unfocus"/>
    </keybind>
    <keybind key="A-space">
      <action name="ShowMenu">
	<menu>client-menu</menu>
      </action>
    </keybind>
-->
    <!-- Keybindings for window switching -->
    <keybind key="A-Tab">
      <action name="NextWindow">
	<finalactions>
	  <action name="Focus"/>
	  <action name="Raise"/>
	  <action name="Unshade"/>
	</finalactions>
      </action>
    </keybind>
    <keybind key="A-S-Tab">
      <action name="PreviousWindow">
	<finalactions>
	  <action name="Focus"/>
	  <action name="Raise"/>
	  <action name="Unshade"/>
	</finalactions>
      </action>
    </keybind>
    <keybind key="C-A-Tab">
      <action name="NextWindow">
	<panels>yes</panels>
	<desktop>yes</desktop>
	<finalactions>
	  <action name="Focus"/>
	  <action name="Raise"/>
	  <action name="Unshade"/>
	</finalactions>
      </action>
    </keybind>
    <!-- Keybindings for window switching with the arrow keys -->
    <keybind key="W-S-Right">
      <action name="DirectionalCycleWindows">
	<direction>right</direction>
      </action>
    </keybind>
    <keybind key="W-S-Left">
      <action name="DirectionalCycleWindows">
	<direction>left</direction>
      </action>
    </keybind>
    <keybind key="W-S-Up">
      <action name="DirectionalCycleWindows">
	<direction>up</direction>
      </action>
    </keybind>
    <keybind key="W-S-Down">
      <action name="DirectionalCycleWindows">
	<direction>down</direction>
      </action>
    </keybind>
    <!-- Keybindings for running applications -->

    <keybind key="W-b">
      <action name="Execute">
	<command>~/bin/config.Windows.Terminator.sh</command>
      </action>
    </keybind>
    <keybind key="W-x">
      <action name="Execute">
	<command>xterm</command>
      </action>
    </keybind>
    <keybind key="W-t">
      <action name="Execute">
	<command>terminator -m -b -l ebg</command>
      </action>
    </keybind>
    <keybind key="W-g">
      <action name="Execute">
	<command>gedit</command>
      </action>
    </keybind>
    <keybind key="W-s">
      <action name="Execute">
	<command>soffice --calc</command>
      </action>
    </keybind>
    <keybind key="W-c">
      <action name="Execute">
	<command>galculator</command>
      </action>
    </keybind>
    <keybind key="W-e">
      <action name="Execute">
	<command>~/JAVA/eclipse/eclipse -vm /usr/lib/jvm/latest/jre/bin</command>
      </action>
    </keybind>

  </keyboard>
  <mouse>
    <dragThreshold>1</dragThreshold>
    <!-- number of pixels the mouse must move before a drag begins -->
    <doubleClickTime>300</doubleClickTime>
    <!-- in milliseconds (1000 = 1 second) -->
    <screenEdgeWarpTime>0</screenEdgeWarpTime>
    <!-- Time before changing desktops when the pointer touches the edge of the
       screen while moving a window, in milliseconds (1000 = 1 second).
       Set this to 0 to disable warping -->
    <screenEdgeWarpMouse>false</screenEdgeWarpMouse>
    <!-- Set this to TRUE to move the mouse pointer across the desktop when
       switching due to hitting the edge of the screen -->
    <context name="Frame">
      <mousebind action="Press" button="A-Left">
	<action name="Focus"/>
	<action name="Raise"/>
      </mousebind>
      <mousebind action="Click" button="A-Left">
	<action name="Unshade"/>
      </mousebind>
      <mousebind action="Drag" button="A-Left">
	<action name="Move"/>
      </mousebind>
      <mousebind action="Press" button="A-Right">
	<action name="Focus"/>
	<action name="Raise"/>
	<action name="Unshade"/>
      </mousebind>
      <mousebind action="Drag" button="A-Right">
	<action name="Resize"/>
      </mousebind>
      <mousebind action="Press" button="A-Middle">
	<action name="Lower"/>
	<action name="FocusToBottom"/>
	<action name="Unfocus"/>
      </mousebind>
      <mousebind action="Click" button="A-Up">
	<action name="GoToDesktop">
	  <to>previous</to>
	</action>
      </mousebind>
      <mousebind action="Click" button="A-Down">
	<action name="GoToDesktop">
	  <to>next</to>
	</action>
      </mousebind>
      <mousebind action="Click" button="C-A-Up">
	<action name="GoToDesktop">
	  <to>previous</to>
	</action>
      </mousebind>
      <mousebind action="Click" button="C-A-Down">
	<action name="GoToDesktop">
	  <to>next</to>
	</action>
      </mousebind>
      <mousebind action="Click" button="A-S-Up">
	<action name="SendToDesktop">
	  <to>previous</to>
	</action>
      </mousebind>
      <mousebind action="Click" button="A-S-Down">
	<action name="SendToDesktop">
	  <to>next</to>
	</action>
      </mousebind>
    </context>
    <context name="Titlebar">
      <mousebind action="Drag" button="Left">
	<action name="Move"/>
      </mousebind>
      <mousebind action="DoubleClick" button="Left">
	<action name="ToggleMaximizeFull"/>
      </mousebind>
      <mousebind action="Click" button="Up">
	<action name="if">
	  <shaded>no</shaded>
	  <then>
	    <action name="Shade"/>
	    <action name="FocusToBottom"/>
	    <action name="Unfocus"/>
	    <action name="Lower"/>
	  </then>
	</action>
      </mousebind>
      <mousebind action="Click" button="Down">
	<action name="if">
	  <shaded>yes</shaded>
	  <then>
	    <action name="Unshade"/>
	    <action name="Raise"/>
	  </then>
	</action>
      </mousebind>
    </context>
    <context name="Titlebar Top Right Bottom Left TLCorner TRCorner BRCorner BLCorner">
      <mousebind action="Press" button="Left">
	<action name="Focus"/>
	<action name="Raise"/>
	<action name="Unshade"/>
      </mousebind>
      <mousebind action="Press" button="Middle">
	<action name="Lower"/>
	<action name="FocusToBottom"/>
	<action name="Unfocus"/>
      </mousebind>
      <mousebind action="Press" button="Right">
	<action name="Focus"/>
	<action name="Raise"/>
	<action name="ShowMenu">
	  <menu>client-menu</menu>
	</action>
      </mousebind>
    </context>
    <context name="Top">
      <mousebind action="Drag" button="Left">
	<action name="Resize">
	  <edge>top</edge>
	</action>
      </mousebind>
    </context>
    <context name="Left">
      <mousebind action="Drag" button="Left">
	<action name="Resize">
	  <edge>left</edge>
	</action>
      </mousebind>
    </context>
    <context name="Right">
      <mousebind action="Drag" button="Left">
	<action name="Resize">
	  <edge>right</edge>
	</action>
      </mousebind>
    </context>
    <context name="Bottom">
      <mousebind action="Drag" button="Left">
	<action name="Resize">
	  <edge>bottom</edge>
	</action>
      </mousebind>
      <mousebind action="Press" button="Right">
	<action name="Focus"/>
	<action name="Raise"/>
	<action name="ShowMenu">
	  <menu>client-menu</menu>
	</action>
      </mousebind>
    </context>
    <context name="TRCorner BRCorner TLCorner BLCorner">
      <mousebind action="Press" button="Left">
	<action name="Focus"/>
	<action name="Raise"/>
	<action name="Unshade"/>
      </mousebind>
      <mousebind action="Drag" button="Left">
	<action name="Resize"/>
      </mousebind>
    </context>
    <context name="Client">
      <mousebind action="Press" button="Left">
	<action name="Focus"/>
	<action name="Raise"/>
      </mousebind>
      <mousebind action="Press" button="Middle">
	<action name="Focus"/>
	<action name="Raise"/>
      </mousebind>
      <mousebind action="Press" button="Right">
	<action name="Focus"/>
	<action name="Raise"/>
      </mousebind>
    </context>
    <context name="Icon">
      <mousebind action="Press" button="Left">
	<action name="Focus"/>
	<action name="Raise"/>
	<action name="Unshade"/>
	<action name="ShowMenu">
	  <menu>client-menu</menu>
	</action>
      </mousebind>
      <mousebind action="Press" button="Right">
	<action name="Focus"/>
	<action name="Raise"/>
	<action name="ShowMenu">
	  <menu>client-menu</menu>
	</action>
      </mousebind>
    </context>
    <context name="AllDesktops">
      <mousebind action="Press" button="Left">
	<action name="Focus"/>
	<action name="Raise"/>
	<action name="Unshade"/>
      </mousebind>
      <mousebind action="Click" button="Left">
	<action name="ToggleOmnipresent"/>
      </mousebind>
    </context>
    <context name="Shade">
      <mousebind action="Press" button="Left">
	<action name="Focus"/>
	<action name="Raise"/>
      </mousebind>
      <mousebind action="Click" button="Left">
	<action name="ToggleShade"/>
      </mousebind>
    </context>
    <context name="Iconify">
      <mousebind action="Press" button="Left">
	<action name="Focus"/>
	<action name="Raise"/>
      </mousebind>
      <mousebind action="Click" button="Left">
	<action name="Iconify"/>
      </mousebind>
    </context>
    <context name="Maximize">
      <mousebind action="Press" button="Left">
	<action name="Focus"/>
	<action name="Raise"/>
	<action name="Unshade"/>
      </mousebind>
      <mousebind action="Press" button="Middle">
	<action name="Focus"/>
	<action name="Raise"/>
	<action name="Unshade"/>
      </mousebind>
      <mousebind action="Press" button="Right">
	<action name="Focus"/>
	<action name="Raise"/>
	<action name="Unshade"/>
      </mousebind>
      <mousebind action="Click" button="Left">
	<action name="ToggleMaximize"/>
      </mousebind>
      <mousebind action="Click" button="Middle">
	<action name="ToggleMaximize">
	  <direction>vertical</direction>
	</action>
      </mousebind>
      <mousebind action="Click" button="Right">
	<action name="ToggleMaximize">
	  <direction>horizontal</direction>
	</action>
      </mousebind>
    </context>
    <context name="Close">
      <mousebind action="Press" button="Left">
	<action name="Focus"/>
	<action name="Raise"/>
	<action name="Unshade"/>
      </mousebind>
      <mousebind action="Click" button="Left">
	<action name="Close"/>
      </mousebind>
    </context>
    <context name="Desktop">
<!--      <mousebind action="Click" button="Up">
	<action name="GoToDesktop">
	  <to>previous</to>
	</action>
      </mousebind>
      <mousebind action="Click" button="Down">
	<action name="GoToDesktop">
	  <to>next</to>
	</action>
      </mousebind>
-->
  <mousebind action="Click" button="A-Up">
	<action name="GoToDesktop">
	  <to>previous</to>
	</action>
      </mousebind>
      <mousebind action="Click" button="A-Down">
	<action name="GoToDesktop">
	  <to>next</to>
	</action>
      </mousebind>
      <mousebind action="Click" button="C-A-Up">
	<action name="GoToDesktop">
	  <to>previous</to>
	</action>
      </mousebind>
      <mousebind action="Click" button="C-A-Down">
	<action name="GoToDesktop">
	  <to>next</to>
	</action>
      </mousebind>
      <mousebind action="Press" button="Left">
	<action name="Focus"/>
	<action name="Raise"/>
      </mousebind>
      <mousebind action="Press" button="Right">
	<action name="Focus"/>
	<action name="Raise"/>
      </mousebind>
    </context>
    <context name="Root">
      <!-- Menus -->
      <mousebind action="Press" button="Middle">
	<action name="ShowMenu">
	  <menu>client-list-combined-menu</menu>
	</action>
      </mousebind>
      <mousebind action="Press" button="Right">
	<action name="ShowMenu">
	  <menu>root-menu</menu>
	</action>
      </mousebind>
    </context>
    <context name="MoveResize">
      <mousebind action="Click" button="Up">
	<action name="GoToDesktop">
	  <to>previous</to>
	</action>
      </mousebind>
      <mousebind action="Click" button="Down">
	<action name="GoToDesktop">
	  <to>next</to>
	</action>
      </mousebind>
      <mousebind action="Click" button="A-Up">
	<action name="GoToDesktop">
	  <to>previous</to>
	</action>
      </mousebind>
      <mousebind action="Click" button="A-Down">
	<action name="GoToDesktop">
	  <to>next</to>
	</action>
      </mousebind>
    </context>
  </mouse>
  <menu>
    <!-- You can specify more than one menu file in here and they are all loaded,
       just don't make menu ids clash or, well, it'll be kind of pointless -->
    <!-- default menu file (or custom one in $HOME/.config/openbox/) -->
    <file>menu.xml</file>
    <hideDelay>200</hideDelay>
    <!-- if a press-release lasts longer than this setting (in milliseconds), the
       menu is hidden again -->
    <middle>no</middle>
    <!-- center submenus vertically about the parent entry -->
    <submenuShowDelay>100</submenuShowDelay>
    <!-- time to delay before showing a submenu after hovering over the parent
       entry.
       if this is a negative value, then the delay is infinite and the
       submenu will not be shown until it is clicked on -->
    <submenuHideDelay>400</submenuHideDelay>
    <!-- time to delay before hiding a submenu when selecting another
       entry in parent menu
       if this is a negative value, then the delay is infinite and the
       submenu will not be hidden until a different submenu is opened -->
    <showIcons>yes</showIcons>
    <!-- controls if icons appear in the client-list-(combined-)menu -->
    <manageDesktops>yes</manageDesktops>
    <!-- show the manage desktops section in the client-list-(combined-)menu -->
  </menu>
  <applications>
    <!--
  # this is an example with comments through out. use these to make your
  # own rules, but without the comments of course.
  # you may use one or more of the name/class/role/title/type rules to specify
  # windows to match

  <application name="the window's _OB_APP_NAME property (see obxprop)"
	      class="the window's _OB_APP_CLASS property (see obxprop)"
	  groupname="the window's _OB_APP_GROUP_NAME property (see obxprop)"
	 groupclass="the window's _OB_APP_GROUP_CLASS property (see obxprop)"
	       role="the window's _OB_APP_ROLE property (see obxprop)"
	      title="the window's _OB_APP_TITLE property (see obxprop)"
	       type="the window's _OB_APP_TYPE property (see obxprob)..
		      (if unspecified, then it is 'dialog' for child windows)">
  # you may set only one of name/class/role/title/type, or you may use more
  # than one together to restrict your matches.

  # the name, class, role, and title use simple wildcard matching such as those
  # used by a shell. you can use * to match any characters and ? to match
  # any single character.

  # the type is one of: normal, dialog, splash, utility, menu, toolbar, dock,
  #    or desktop

  # when multiple rules match a window, they will all be applied, in the
  # order that they appear in this list


    # each rule element can be left out or set to 'default' to specify to not
    # change that attribute of the window

    <decor>yes</decor>
    # enable or disable window decorations

    <shade>no</shade>
    # make the window shaded when it appears, or not

    <position force="no">
      # the position is only used if both an x and y coordinate are provided
      # (and not set to 'default')
      # when force is "yes", then the window will be placed here even if it
      # says you want it placed elsewhere.  this is to override buggy
      # applications who refuse to behave
      <x>center</x>
      # a number like 50, or 'center' to center on screen. use a negative number
      # to start from the right (or bottom for <y>), ie -50 is 50 pixels from
      # the right edge (or bottom). use 'default' to specify using value
      # provided by the application, or chosen by openbox, instead.
      <y>200</y>
      <monitor>1</monitor>
      # specifies the monitor in a xinerama setup.
      # 1 is the first head, or 'mouse' for wherever the mouse is
    </position>

    <size>
      # the size to make the window.
      <width>20</width>
      # a number like 20, or 'default' to use the size given by the application.
      # you can use fractions such as 1/2 or percentages such as 75% in which
      # case the value is relative to the size of the monitor that the window
      # appears on.
      <height>30%</height>
    </size>

    <focus>yes</focus>
    # if the window should try be given focus when it appears. if this is set
    # to yes it doesn't guarantee the window will be given focus. some
    # restrictions may apply, but Openbox will try to

    <desktop>1</desktop>
    # 1 is the first desktop, 'all' for all desktops

    <layer>normal</layer>
    # 'above', 'normal', or 'below'

    <iconic>no</iconic>
    # make the window iconified when it appears, or not

    <skip_pager>no</skip_pager>
    # asks to not be shown in pagers

    <skip_taskbar>no</skip_taskbar>
    # asks to not be shown in taskbars. window cycling actions will also
    # skip past such windows

    <fullscreen>yes</fullscreen>
    # make the window in fullscreen mode when it appears

    <maximized>true</maximized>
    # 'Horizontal', 'Vertical' or boolean (yes/no)
  </application>

  # end of the example
-->
    <application name="Navigator" class="Firefox*">
      <!-- <focus>yes</focus>  -->
<!--      <decor>no</decor>
    <iconic>no</iconic>
    <fullscreen>yes</fullscreen>
    <layer>normal</layer>
    <skip_pager>no</skip_pager>
    <skip_taskbar>no</skip_taskbar> -->
      <desktop>1</desktop>
    </application>
    <application name="Navigator" class="Pale moon*">
      <desktop>1</desktop>
    </application>
    <application name="Turpial" class="Turpial*">
      <desktop>1</desktop>
    </application>

    <application name="terminator" class="Terminator*">
      <!--<decor>no</decor>
    <iconic>no</iconic>
    <fullscreen>no</fullscreen>
    <layer>normal</layer>
    <skip_pager>no</skip_pager>
    <skip_taskbar>no</skip_taskbar> -->
      <desktop>2</desktop>
    </application>
    <application name="Mail" class="Thunderbird*">
      <desktop>3</desktop>
    </application>
    <application name="spacefm" class="Spacefm*">
      <desktop>4</desktop>
    </application>
    <application name="rstudio" class="Rstudio*">
      <focus>no</focus>
      <decor>no</decor>
      <iconic>no</iconic>
      <fullscreen>yes</fullscreen>
      <desktop>5</desktop>
    </application>
    <application name="python" class="Python*">
      <fullscreen>yes</fullscreen>
      <desktop>6</desktop>
    </application>
<!--
    <application name="terminator_desktop" class="Terminator*">
      <focus>yes</focus>
      <layer>below</layer>
      <desktop>all</desktop>
      <skip_taskbar>yes</skip_taskbar>
      <desktop>3</desktop>
    </application>
-->
  </applications>
</openbox_config>

EOF
}
##################################    rc.xml   #################################

################################    autostart   ################################
create_autostart(){

# IS MIN_INSTALL ?
if [ "$1" = true ]; then

cat > /home/edward/.config/openbox/autostart <<  'EOF'
# Programs to launch at startup
numlockx &
xcompmgr -c &
(sleep 0.5 && nitrogen --restore) &

## Programs that will run after Openbox has started
(sleep 0.5 && tint2) &


(sleep 1 && /usr/bin/terminator -m -b -l ebg) &
(sleep 2 && /home/edward/bin/sh config.Windows.Terminator.sh)


(sleep 2 && /opt/dropbox/dropbox) &


(sleep 0.5 && /usr/bin/spacefm) &


(sleep 0.5 && /usr/bin/palemoon) &
EOF
else

cat > /home/edward/.config/openbox/autostart << 'EOF'
# Programs to launch at startup
numlockx &
xcompmgr -c &
(sleep 0.5 && nitrogen --restore) &

## Programs that will run after Openbox has started
(sleep 0.5 && tint2) &
(sleep 0.5 && /opt/dropbox/dropbox) &

(sleep 0.5 && /usr/bin/terminator -m -b -l ebg) &
#(sleep 1 && /home/edward/bin/sh config.Windows.Terminator.sh) &


#/usr/bin/firefox &
/usr/bin/palemoon &
(sleep 0.75 && /usr/bin/thunderbird) &

(sleep 1.0 && . ~/bin/conky_start) &
(sleep 0.5 && /usr/bin/spacefm) &

##/usr/bin/rstudio &
##/home/edward/PYTHON/drpython/drpython.pyw &

(sleep 200 && /usr/bin/turpial) &
EOF

fi
}
################################    autostart   ################################

#############################   openbox-pipemenu    #############################
create_openbox-pipemenu(){
cat > ~/bin/openbox-pipemenu << 'EOF'
#!/bin/sh
#################################################################################
PATH=/bin:/usr/bin
{
cat <<EOF

<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xml" href="#stylesheet"?>

<!DOCTYPE doc [
<!ATTLIST xsl:stylesheet
  id    ID      #REQUIRED>
]>

<doc>
  <xsl:stylesheet id="stylesheet" version="1.0"
   xmlns:xsl="http://www.w3.org/1999/XSL/Transform">

    <xsl:output omit-xml-declaration="yes" />

    <xsl:template match="/doc/openbox_pipe_menu">
      <openbox_pipe_menu>
      <xsl:choose>
	<xsl:when test="count(./menu) = 1">
	  <xsl:copy-of select="./menu/*" />
	</xsl:when>
	<xsl:otherwise>
	  <xsl:copy-of select="*" />
	</xsl:otherwise>
      </xsl:choose>
      </openbox_pipe_menu>
    </xsl:template>

    <xsl:template match="xsl:stylesheet" />

  </xsl:stylesheet>

EOF
    xdg_menu --format openbox3-pipe "$@"
    printf "</doc>\n"
} | xsltproc --nonet --novalid -
EOF
}
#############################   openbox-pipemenu    #############################

##################################     tint2     ################################
config_tint2(){

print_title "tint2  -----------------------------------------------------------"
mkdir -p ~/.config/tint2

cat > /home/edward/.config/tint2/tint2rc << 'EOF'
# Tint2 config file
# Generated by tintwizard (http://code.google.com/p/tintwizard/)
# For information on manually configuring tint2 see http://code.google.com/p/tint2/wiki/Configure

# Background definitions
# ID 1
rounded = 5
border_width = 1
background_color = #000000 30
border_color = #ffffff 0

# ID 2 - task active
rounded = 0
border_width = 1
background_color = #d8d8d8 0
border_color = #ffffff 100

# ID 3 - task
rounded = 1
border_width = 0
background_color = #000000 30
border_color = #000000 0

# ID 4
rounded = 0
border_width = 1
background_color = #888888 20
border_color = #ED2323 60

# ID 5 - taskbar
rounded = 0
border_width = 1
background_color = #000000 30
border_color = #ffffff 100

# ID 6 - active taskbar
rounded = 0
border_width = 1
background_color = #d8d8d8 0
border_color = #ffffff 100

# ID 7 - tooltip
rounded = 0
border_width = 0
background_color = #222222 90
border_color = #222222 90

# ID 8
rounded = 0
border_width = 1
background_color = #888888 20
border_color = #888888 20


# Panel
panel_monitor = all
panel_position = top right horizontal
panel_items = TSBC
panel_size = 100% 30
panel_margin = 0 0
panel_padding = 3 2 3
panel_dock = 0
wm_menu = 1
panel_layer = bottom
panel_background_id = 1

# Panel Autohide
autohide = 0
autohide_show_timeout = 0.3
autohide_hide_timeout = 1.5
autohide_height = 6
strut_policy = follow_size

# Taskbar
taskbar_mode = multi_desktop
taskbar_padding = 6 0 6
taskbar_background_id = 5
taskbar_active_background_id = 6
#taskbar_name = 1
#taskbar_name_background_id = 0
#taskbar_name_active_background_id = 0
#taskbar_name_font = Liberation Sans 9
#taskbar_name_font_color = #f1f1f1 100
#taskbar_name_active_font_color = #ffffff 100

# Tasks
urgent_nb_of_blink = 20
task_icon = 1
task_text = 0
task_centered = 1
task_maximum_size = 35 25
task_padding = 2 2
task_background_id = 3
task_active_background_id = 2
task_urgent_background_id = 4
task_iconified_background_id = 3

# Task Icons
task_icon_asb = 75 0 0
task_active_icon_asb = 100 0 0
task_urgent_icon_asb = 100 0 0
task_iconified_icon_asb = 80 0 0

# Fonts
task_font = Liberation Sans 06_55 6
task_font_color = #828282 60
task_active_font_color = #828282 100
task_urgent_font_color = #FFFFFF 100
task_iconified_font_color = #d8d8d8 60
font_shadow = 0

## Launcher
#launcher_padding = 8 4 4
#launcher_background_id = 0
#launcher_icon_size = 24
## Specify icon theme names with launcher_icon_theme.
## if you have an XSETTINGS manager running (like xfsettingsd), tint2 will follow your current theme.
#launcher_icon_theme =
## Each launcher_item_app must be a full path to a .desktop file
#launcher_item_app = /usr/share/applications/terminator.desktop
#launcher_item_app = /usr/share/applications/xfce4-file-manager.desktop
#launcher_item_app = /usr/share/applications/gedit.desktop
#launcher_item_app = /usr/share/applications/iceweasel.desktop

# System Tray
systray = 1
systray_padding = 4 2 3
systray_sort = right2left
systray_background_id = 5
systray_icon_size = 24
systray_icon_asb = 100 0 0

## Clock
time1_format = %H:%M
time1_font = Liberation Sans 9
time2_format = %A %d %B
time2_font = sans 6
clock_font_color = #ffffff 100
clock_padding = 12 4
clock_background_id = 5
clock_lclick_command = gsimplecal
clock_rclick_command = gsimplecal

# Tooltips
tooltip = 1
tooltip_padding = 2 2
tooltip_show_timeout = 0.0
tooltip_hide_timeout = 0.0
tooltip_background_id = 7
tooltip_font_color = #d8d8d8 100
tooltip_font = Liberation Sans normal 9.0

# Mouse
mouse_middle = none
mouse_right = close
mouse_scroll_up = toggle
mouse_scroll_down = iconify

# Battery
#battery = 1
#battery_low_status = 20
#battery_low_cmd = notify-send "Battery at 20%"
#battery_hide = 96
#bat1_font = Liberation Mono 8
#bat2_font = Liberation Mono 8
#battery_font_color = #b5b5b5 100
#battery_padding = 2 0
#battery_background_id = 0

# End of config

EOF

print_title "CONFIG tint2confrc -----------------------------------------------"
cat > /home/edward/.config/tint2/tint2confrc << 'EOF'
#---------------------------------------------
# TINT2CONF CONFIG FILE
default_theme = /home/edward/.config/tint2/default.tint2rc
cmd_property = /usr/bin/env python /usr/bin/tintwizard.py
width = 500
height = 350


EOF
}
##################################     tint2     ################################

###############################    terminator    ###############################
config_terminator(){

mkdir -p ~/.config/terminator

cat > /home/edward/.config/terminator/config << 'EOF'
[global_config]
  window_state = maximise
  handle_size = 2
  enabled_plugins = LaunchpadBugURLHandler, TerminalExporter, LaunchpadCodeURLHandler, APTURLHandler, LayoutManager
  suppress_multiple_term_dialog = True
  tab_position = hidden
  inactive_color_offset = 0.79
[keybindings]
[profiles]
  [[default]]
    scrollbar_position = hidden
    use_system_font = False
    font = Monospace 8
    background_darkness = 0.8
    scrollback_lines = 75000
    background_type = transparent
    background_image = ~/Dropbox/Photos/desktops/crossfitchicks_2.jpg
    cursor_color = yellow
    show_titlebar = False
    copy_on_selection = True
    cursor_blink = False
    scrollback_infinite = True
[layouts]
  [[default]]
    [[[child1]]]
      type = Terminal
      parent = window0
      profile = default
    #command = top -u edward
    [[[window0]]]
      type = Window
      parent = ""
  [[edward2]]
    [[[window0]]]
      position = 0:0
      type = Window
      order = 0
      parent = ""
      size = 1600, 870

    [[[child1]]]
      position = 634
      type = HPaned
      ratio = 0.8
      order = 0
      parent = window0
      titlebars = False

    [[[terminal5]]]
      profile = default
      type = Terminal
      order = 1
      parent = child1
      titlebars = False

    [[[child2]]]
      position = 262
      type = VPaned
      order = 0
      parent = child1

    [[[terminal3]]]
      profile = default
      type = Terminal
      order = 0
      parent = child2

    [[[terminal4]]]
      profile = default
      type = Terminal
      order = 1
      parent = child2
  [[edward]]
    [[[child0]]]
      position = 0:0
      type = Window
      order = 0
      parent = ""
      size = 1600, 870
    [[[child1]]]
      position = 800
      type = HPaned
      ratio = 0.8
      order = 0
      parent = child0
    [[[child2]]]
      position = 244
      type = VPaned
      ratio = 0.8
      order = 0
      parent = child1
    [[[terminal3]]]
      profile = default
      type = Terminal
      order = 0
      parent = child2
    [[[terminal5]]]
      profile = default
      type = Terminal
      order = 1
      parent = child1
    [[[terminal4]]]
      profile = default
      type = Terminal
      order = 1
      parent = child2
  [[ebg]]
    [[[child0]]]
      position = 0:25
      type = Window
      order = 0
      parent = ""
      size = 1600, 875
    [[[child1]]]
      labels = None, None
      type = Notebook
      order = 0
      parent = child0
    [[[child2]]]
      position = 800
      type = HPaned
      order = 0
      parent = child1
    [[[child3]]]
      position = 437
      type = VPaned
      order = 0
      parent = child2
    [[[child7]]]
      position = 778
      type = HPaned
      order = 1
      parent = child1
    [[[terminal5]]]
      profile = default
      type = Terminal
      order = 1
      parent = child3
      command = ""
    [[[terminal4]]]
      profile = default
      type = Terminal
      order = 0
      parent = child3
      command = ""
    [[[terminal6]]]
      profile = default
      type = Terminal
      order = 1
      parent = child2
      command = ""
    [[[terminal9]]]
      profile = default
      type = Terminal
      order = 1
      parent = child7
      command = ""
    [[[terminal8]]]
      profile = default
      type = Terminal
      order = 0
      parent = child7
      command = ""
[plugins]

EOF
}
###############################    terminator    ###############################

#########################    terminator_windows    #############################
config_terminator_windows(){

cat > /home/edward/bin/config.Windows.Terminator.sh << 'EOF'
#!/bin/bash
#
# Customize for each screen size

if [ "$HOSTNAME" = moe ]; then
    # 1) Click the mouse to activate terminator
    sleep 0.5
    xdotool mousemove --sync 200 275
    xdotool mousedown 1
    xdotool mouseup 1

    # 2) Goto the second panel - the one with 3 panes
    sleep 0.1
    xdotool key ctrl+Page_Up
    sleep 0.1

    # 3) Finally, arrange things smartly
    xdotool mousemove --sync 960 75
    sleep 0.1
    xdotool mousedown 1
    sleep 0.1
    xdotool mousemove_relative --polar --sync 270 250
    sleep 0.1
    xdotool mouseup 1

    sleep 0.1
    xdotool mousemove --sync 500 555
    sleep 0.1
    xdotool mousedown 1
    sleep 0.1
    xdotool mousemove_relative --polar --sync 0 225
    sleep 0.1
    xdotool mouseup 1
else
    # 1) Click the mouse to activate terminator
    sleep 0.5
    xdotool mousemove --sync 200 275
    xdotool mousedown 1
    xdotool mouseup 1

    # 2) Goto the second panel - the one with 3 panes
    sleep 0.1
    xdotool key ctrl+Page_Up
    sleep 0.1

    # 3) Finally, arrange things smartly
    xdotool mousemove --sync 800 75
    sleep 0.1
    xdotool mousedown 1
    sleep 0.1
    xdotool mousemove_relative --polar --sync 270 200
    sleep 0.1
    xdotool mouseup 1

    sleep 0.1
    xdotool mousemove --sync 500 465
    sleep 0.1
    xdotool mousedown 1
    sleep 0.1
    xdotool mousemove_relative --polar --sync 0 200
    sleep 0.1
    xdotool mouseup 1

fi




EOF
}
#########################    terminator_windows    #############################


###################################    SSH    #################################
config_ssh(){

print_title "SSH - SSHD CONFIGURATION  ---------------------------------------"
cat > /home/edward/sshd_config  << 'EOF'
#	$OpenBSD: sshd_config,v 1.94 2015/02/02 01:57:44 deraadt Exp $
# This is the sshd server system-wide configuration file.  See
# sshd_config(5) for more information.
# This sshd was compiled with PATH=/usr/bin:/bin:/usr/sbin:/sbin


Port 2222
#ListenAddress 192.168.1.8
#ListenAddress 71.123.190.17
Protocol 2
AllowUsers edward

# HostKeys for protocol version 2
HostKey /etc/ssh/ssh_host_rsa_key
HostKey /etc/ssh/ssh_host_dsa_key

# Logging:
SyslogFacility AUTH
LogLevel INFO

# Authentication:
LoginGraceTime 60
PermitRootLogin forced-commands-only
MaxAuthTries 6
MaxSessions 5

#ServerKeyBits 2048
# To disable tunneled clear text passwords, change to no here!
PasswordAuthentication yes

# Change to no to disable s/key passwords
ChallengeResponseAuthentication no

UsePAM yes

#X11Forwarding yes
TCPKeepAlive no

# Client will be disconnected if after 3 'alive' attempts, spaced 60s apart
ClientAliveInterval 60
ClientAliveCountMax 3

MaxStartups 6:30:100
#ChrootDirectory none

# no default banner path
Banner /etc/issue

# override default of no subsystems
Subsystem  sftp	   /usr/lib/ssh/sftp-server

# Example of overriding settings on a per-user basis
Match User edward
	X11Forwarding yes
	AllowTcpForwarding yes
	X11UseLocalHost yes
	X11DisplayOffset 10

#	PermitTTY no
#	ForceCommand cvs server
# AcceptEnv, AllowAgentForwarding,  AllowGroups,  AllowStreamLocal, Forwarding,
# AllowTcpForwarding, AllowUsers, AuthenticationMethods, AuthorizedKeysCommand,
# AuthorizedKeysCommandUser, AuthorizedKeysFile, AuthorizedPrincipalsFile, Banner,
# ChrootDirectory, DenyGroups, DenyUsers, ForceCommand, GatewayPorts, GSSAPIAuthentication,
# HostbasedAcceptedKeyTypes,  HostbasedAuthentication,  HostbasedUsesNameFromPacketOnly,  IPQoS,
# KbdInteractiveAuthentication, KerberosAuthentication, MaxAuthTries, MaxSessions,
# PasswordAuthentication, PermitEmptyPasswords, PermitOpen, PermitRootLogin, PermitTTY,
# PermitTunnel, PermitUserRC, PubkeyAcceptedKeyTypes, PubkeyAuthentication, RekeyLimit,
# RevokedKeys, RhostsRSAAuthentication, RSAAuthentication, StreamLocalBindMask,
# StreamLocalBindUnlink, TrustedUserCAKeys, X11DisplayOffset, X11Forwarding and X11UseLocalHost
EOF


mkdir -p ~/.ssh
touch ~/.ssh/authorized_keys

sudo mv /etc/ssh/sshd_config etc/ssh/sshd_config.orig
sudo mv ~/sshd_config  /etc/ssh/sshd_config
sudo chown root:root /etc/ssh/sshd_config
}
###################################    SSH    #################################


##################################    emacs    ################################
config_emacs(){

print_title "CONFIG .emacs --------------------------------------------------"
mkdir -p ~/.emacs.d
mv ~/.emacs ~/.emacs.d/.emacs.orig

cat > /home/edward/.emacs << 'EOF'
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; ---- debug mode in windows
;; ex: debug the .emacs file
;; C:\bin> emacs .emacs --debug-init
;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(setf user-full-name "Edward Glidewell")
(setf user-mail-address "edwardglidewell@gmail.com")
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Keep my custom-set variables separate from configuration file.
;;
;; packages, archives, reqd packages
;; important stuff gets loaded first
(load "~/.emacs.d/my-packages.el")

;; mode line customization takes place last - so run theme file first
(setf custom-file "~/.emacs.d/custom.el")
(load custom-file)

(load "~/.emacs.d/my-modeline.el")

;; forgetting something??
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; since middle mouse button doesn't work in terminator, try something like
;(add-hook 'lisp-mode-hook
;          (lambda () (local-set-key (kbd "M-<up>") 'foo)))
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

EOF

print_title "CONFIG .emacs.d/custom.el  ----------------------------------------"
cat > /home/edward/.emacs.d/custom.el <<  'EOF'
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; NEEDED TO GET ENABLE MOUSE TO SET ACTIVE REGION
(require 'mouse)
(xterm-mouse-mode t)


;; NOW NEEDED (EMACS >=24) TO ENABLE MOUSE MIDDLE BUTTON TO COPY/PASTE IN AND OUT
;;  OF EMACS
(setq select-active-regions nil)
(setq mouse-drag-copy-region t)
(global-set-key [mouse-2] 'mouse-yank-at-click)

;; CAN NOW PASTE TO /COPY FROM WINDOWS
(setq x-select-enable-clipboard t)

;; USES BUGGERY TO MAKE THINGS WORK LIKE THEY USED TO IN EMACS <=23
(unless window-system
 (when (getenv "DISPLAY")
   ; Callback for when user cuts
   (defun xsel-cut-function (text &optional push)
     ; Insert text to temp-buffer, and "send" content to xsel stdin
     (with-temp-buffer
	(insert text)

	(call-process-region (point-min) (point-max) "xsel" nil 0 nil "--clipboard" "--input")))
    ;Call back for when user pastes
   (defun xsel-paste-function()

     (let ((xsel-output (shell-command-to-string "xsel --clipboard --output")))
	(unless (string= (car kill-ring) xsel-output)
	  xsel-output )))
    ;Attach callbacks to hooks
   (setq interprogram-cut-function 'xsel-cut-function)
   (setq interprogram-paste-function 'xsel-paste-function)
))
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; This makes sure that brace structures (), [], {}, etc. are closed as soon as
;;  the opening character is typed.
(require 'autopair)

(show-paren-mode t)
(setq-default show-paren-delay 0)
(setq-default scroll-step 1)

;;Typing 'yes' or 'no' in prompts is tiring. Instead use 'y'/'n' keys at prompts:
(defalias 'yes-or-no-p 'y-or-n-p)

;; Turn down the time to echo keystrokes so I don't have to wait around for things to happen
(setq echo-keystrokes 0.1)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;Similarly, to only use spaces for indentation everywhere:
;(setq-default indent-tabs-mode nil)
;(setq tab-width 4)

;; make sure file ends with newline
(setq-default require-final-newline t)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(menu-bar-mode -1)
;; display time in the modeline
(setq display-time-24hr-format t)
(setq display-time-day-and-date t)
(display-time)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Emacs usually has a splash screen on startup.
;; Get rid of that and start with a blank buffer.
(setq  inhibit-startup-message t
       inhibit-splash-screen t)

;; Set encoding
(setq  prefer-coding-system 'utf-8)
(setq  coding-system-for-read 'utf-8)
(setq  coding-system-for-write 'utf-8)

;; make the default appearance side by side windows instead of vertically stacked
(setq  split-height-threshold 0)
(setq  split-width-threshold nil)

;; Column line where text should be wrapped
(setq  fill-column 80)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; undo
(global-set-key (kbd "C-z") 'undo)
(global-set-key (kbd "<home>") 'beginning-of-buffer)
(global-set-key (kbd "<end>") 'end-of-buffer)
(global-set-key (kbd "C-x C-r") 'query-replace-regexp)
;;(global-set-key [f4] 'goto-line)

(global-set-key (kbd "S-C-<left>") 'shrink-window-horizontally)
(global-set-key (kbd "S-C-<right>") 'enlarge-window-horizontally)
(global-set-key (kbd "S-C-<down>") 'shrink-window)
(global-set-key (kbd "S-C-<up>") 'enlarge-window)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(global-set-key [f1] "\C-x0")
(global-set-key [f2] "\C-x2")
(global-set-key [f3] "\C-x3")
;;(global-set-key [f3] "\C-x3")
;;(global-set-key [f4] 'describe-key)
;;(global-set-key [f5] 'eval-buffer)
;;(global-set-key (kbd "<f8>")  #'whitespace-mode)
;;(global-set-key "\C-xs" 'shell)
;;;(global-unset-key [insert]
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Fullscreen editing
(defun fullscreen ()
  (interactive)
    (set-frame-parameter nil 'fullscreen
    (if (frame-parameter nil 'fullscreen) nil 'fullboth)))
(global-set-key [f12] 'fullscreen)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(defun display-startup-echo-area-message ()
  (message ".emacs loaded successfully."))
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; BLOCK COMMENTING CODE
(defun comment-dwim-line (&optional arg)
    "Replacement for the comment-dwim command.
    If no region is selected and current line is not blank and we are not at
    the end of the line, then comment current line.
    Replaces default behaviour of comment-dwim, when it inserts comment at the
    end of the line."
    (interactive "*P")
    (comment-normalize-vars)
    (if (and (not (region-active-p)) (not (looking-at "[ \t]*$")))
	(comment-or-uncomment-region (line-beginning-position) (line-end-position))
      (comment-dwim arg)))

(global-set-key "\M-;" 'comment-dwim-line)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(defconst win32
  (eq system-type 'windows-nt)
  "Are we running on Win32 system")

(defconst linux
  (eq system-type 'gnu/linux)
  "Are we running on linux system")

;; places top left corner of initial frame at location (x,y) on screen
(when win32
  ;; size & position
  (setq initial-frame-alist
    '(;
      (top               . 20)
      (left             . 300)
    )
  )

  ;; Display settings
  ; default size and color options for all frames.
  (setq default-frame-alist
   '(
      (width             . 100)
      (height            . 50)
    )
  )
  (cd "C:/Praxeum/Dropbox/")
)

(when linux
  ;; size & position
  (setq initial-frame-alist
    '(;
      (top               . 20);
      (left             . 800);
    )
  )

  ;; Display settings
  ; default size and color options for all frames.
  (setq default-frame-alist
    '(
       (width             . 130)
       (height            . 65)
    )
    )
  (set-face-attribute 'default nil :height 100)
;;  (cd "/home/edward/Dropbox/")
)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;(load-theme 'zenburn t)
;;;;(load-theme 'ample-zen t)
;;;;(load-theme 'zen-and-art t)
;;;;(load-theme 'adwaita t)
;;;;(load-theme 'deeper-blue t)
;;;;(load-theme 'dichromacy t)
;;;;(load-theme 'leuven t)
;;;;(load-theme 'light-blue t)
;;;;(load-theme 'manoj-dark t)
;;;;(load-theme 'misterioso t)
;;;;(load-theme 'wheatgrass t)
;;;;(load-theme 'whiteboard t)
;;(load-theme 'wombat t)
;(load-theme 'hc-zenburn t)
;(load-theme 'tsdh-dark t)
(load-theme 'tango-dark t)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; CLEAN UP WHITE SPACES FROM COPY/PASTE ETC
(add-hook 'before-save-hook 'whitespace-cleanup)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; make backup to a designated dir, mirroring the full path
(setq
 backup-by-copying t                     ; don't clobber symlinks
 backup-directory-alist
 '(("." . "~/.emacs.d/emacs-backup"))    ; don't litter my fs tree
 delete-old-versions t
 kept-new-versions 6
 kept-old-versions 4
 version-control t)                      ; use versioned backups

;; (defun my-backup-file-name (fpath)
;;     "Return a new file path of a given file path.
;;     If the new path's directories does not exist, create them."
;;     (let* (
;;	   (backupRootDir "~/.emacs.d/emacs-backup/")
;;	   (filePath (replace-regexp-in-string "[A-Za-z]:" "" fpath )) ; remove Windows driver letter in path, ⁖ “C:”
;;	   (backupFilePath (replace-regexp-in-string "//" "/" (concat backupRootDir filePath "~") ))
;;	   )
;;       (make-directory (file-name-directory backupFilePath) (file-name-directory backupFilePath))
;;       backupFilePath
;;     )
;; )
;; (setq make-backup-file-name-function 'my-backup-file-name)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(setq save-place-file "~/.emacs.d/saveplace") ;; keep my ~/ clean
(setq-default save-place t)                   ;; activate it for all buffers
(require 'saveplace)                          ;; get the package
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Indentation and buffer cleanup
;; This re-indents, untabifies, and cleans up whitespace. It is stolen directly from the emacs-starter-kit.
;; (defun untabify-buffer ()
;;  (interactive)
;;  (untabify (point-min) (point-max)))

;; (defun indent-buffer ()
;;  (interactive)
;;  (indent-region (point-min) (point-max)))

;; (defun cleanup-buffer ()
;;  "Perform a bunch of operations on the whitespace content of a buffer."
;;  (interactive)
;;  (indent-buffer)
;;  (untabify-buffer)
;;  (delete-trailing-whitespace))

;; (defun cleanup-region (beg end)
;;  (interactive)
;;  (indent-buffer)
;;  (untabify-buffer)
;;  (delete-trailing-whitespace))
;;  delete-trailing-lines to nil

;; (global-set-key (kbd "C-c b") 'cleanup-region)
;; (global-set-key (kbd "C-c b") 'cleanup-buffer)

;(setq-default show-trailing-whitespace t)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; (defun xah-clean-whitespace (p1 p2)
;;     "Delete trailing whitespace, and replace repeated blank lines into just 2.
;;      This function works on whole buffer or text selection.

;;      URL `http://ergoemacs.org/emacs/elisp_compact_empty_lines.html'
;;      version 2015-02-06"
;;     (interactive
;;       (if (region-active-p)
;;         (list (region-beginning) (region-end))
;;       (list 1 (point-max))))
;;     (save-excursion
;;       (save-restriction
;;         (narrow-to-region p1 p2)
;;         (progn
;;           (goto-char (point-min))
;;           (while (search-forward-regexp "[ \t]+\n" nil "noerror")
;;             (replace-match "\n")))
;;         (progn
;;           (goto-char (point-min))
;;           (while (search-forward-regexp "\n\n\n+" nil "noerror")
;;                    (replace-match "\n\n"))))))
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; TABS / INDENTATION
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;Here is AaronL’s C-style, as an example. It has been commented for your convenience.
					;(setq-default c-indent-tabs-mode t     ; Pressing TAB should cause indentation;
					;             c-indent-level 4         ; A TAB is equivilent to four spaces
					;             c-argdecl-indent 0       ; Do not indent argument decl's extra
					;             c-tab-always-indent t
					;             backward-delete-function nil) ; DO NOT expand tabs when deleting
					;(c-add-style "my-c-style" '((c-continued-statement-offset 4))) ; If a statement continues on the next line, indent the continuation by 4

					;(defun my-c-mode-hook ()
					; (c-set-style "my-c-style")
					; (c-set-offset 'substatement-open '0) ; brackets should be at same indentation level as the statements they open
					; (c-set-offset 'inline-open '+)
					; (c-set-offset 'block-open '+)
					; (c-set-offset 'brace-list-open '+)   ; all "opens" should be indented by the c-indent-level
					; (c-set-offset 'case-label '+))       ; indent case labels by c-indent-level, too
					;(add-hook 'c-mode-hook 'my-c-mode-hook)
					;(add-hook 'c++-mode-hook 'my-c-mode-hook)

;;Setting Tab to indent region if anything is selected
					;(defun tab-indents-region ()
					;  (local-set-key [(tab)] 'fledermaus-maybe-tab))
					;(add-hook 'c-mode-common-hook   'tab-indents-region)

;;fledermaus came up with this
					;(defun fledermaus-maybe-tab ()
					;  (interactive)
					;  (if (and transient-mark-mode mark-active)
					;      (indent-region (region-beginning) (region-end) nil)
					;    (c-indent-command)))




;;  ***************  NEEDED ?????  *************** ;;
;;  ***************  NEEDED ?????  *************** ;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; NO LONGER NEEDED FOR SOME REASON - MODELINE SPECS TAKE OVER??
;; Line numbers are good.  Getting column numbering as well is better
;; The mode-line is made more useful by showing the progress through the file
;; (column-number-mode t);; (setq  size-indication-mode t);; (size-indication-mode t)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; Turn on auto complete.
;(require 'auto-complete-config)
;(ac-config-default)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Marking text
;; I like to see what's selected in the buffer.
;; This turns on visual feedback on selections.
;(transient-mark-mode t)
;; Emacs also has it's own clipboard and doesn't respond to the system clipboard
;; by default, so tell Emacs that we're all friends and can get along
;; Hence, enable emacs to copy to the clipboard
;(setq x-select-enable-clipboard t)
;;don't know when/if this will ne needed
;; interprogram-paste-function 'x-cut-buffer-or-selection-value
;;(setq x-cut-buffer-or-selection-value t)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

EOF

print_title "CONFIG .emacs.d/my-modeline.el  -----------------------------------"
cat > /home/edward/.emacs.d/my-modeline.el << 'EOF'
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Mode line setup
(setq-default
 mode-line-format
 '(; Position, including warning for 80 columns
   (:propertize "%4l:" face mode-line-position-face)
   (:eval (propertize "%3c" 'face
    (if (>= (current-column) 81)
    'mode-line-80col-face
	'mode-line-position-face)))
   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   "     "
   (-3 . "%p")
   ;;   "   "
   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   mode-line-client
   "  "
;; read-only or modified status
   (:eval
    (cond (buffer-read-only
	   (propertize " RO " 'face 'mode-line-read-only-face))
	  ((buffer-modified-p)
	   (propertize " ** " 'face 'mode-line-modified-face))
	  (t "      ")))
   "    "
  ;; directory and buffer/file name
   (:propertize (:eval (shorten-directory default-directory 30))
		face mode-line-folder-face)
   (:propertize "%b"
		face mode-line-filename-face)

  ;; narrow [default -- keep?]
   " %n "
  ;; mode indicators: vc, recursive edit, major mode, minor modes, process, global
   (vc-mode vc-mode)
   "  %["
   (:propertize mode-name
		face mode-line-mode-face)
   "%] "
   (:eval (propertize (format-mode-line minor-mode-alist)
		      'face 'mode-line-minor-mode-face))
   (:propertize mode-line-process
		face mode-line-process-face)
   (global-mode-string global-mode-string)
   "    "
  ;; nyan-mode uses nyan cat as an alternative to %p
   (:eval (when nyan-mode (list (nyan-create))))
   ))

;; Helper function
(defun shorten-directory (dir max-length)
  "Show up to `max-length' characters of a directory name `dir'."
  (let ((path (reverse (split-string (abbreviate-file-name dir) "/")))
	(output ""))
    (when (and path (equal "" (car path)))
      (setq path (cdr path)))
    (while (and path (< (length output) (- max-length 4)))
      (setq output (concat (car path) "/" output))
      (setq path (cdr path)))
    (when path
      (setq output (concat ".../" output)))
    output))

;; Extra mode line faces
(make-face 'mode-line-read-only-face)
(make-face 'mode-line-modified-face)
(make-face 'mode-line-folder-face)
(make-face 'mode-line-filename-face)
(make-face 'mode-line-position-face)
(make-face 'mode-line-mode-face)
(make-face 'mode-line-minor-mode-face)
(make-face 'mode-line-process-face)
(make-face 'mode-line-80col-face)


(set-face-attribute 'mode-line nil   ;; main modeline bar and text colors
		    :foreground "gray70" :background "gray20"
		    :inverse-video nil
		    :box '(:line-width 6 :color "gray20" :style nil))
(set-face-attribute 'mode-line-inactive nil
		    :foreground "gray80" :background "gray40"
		    :inverse-video nil
		    :box '(:line-width 6 :color "gray40" :style nil))
(set-face-attribute 'mode-line-read-only-face nil
		    :inherit 'mode-line-face
		    :foreground "#4271ae" ;; blue
		    :box '(:line-width 2 :color "#4271ae"))
(set-face-attribute 'mode-line-modified-face nil  ;; file modified warning
		    :inherit 'mode-line-face
		    :foreground "#c82829" ;; red
		    :background "#ffffff" ;; white
		    :box '(:line-width 2 :color "#c82829"))
(set-face-attribute 'mode-line-folder-face nil  ;; folder name text
		    :inherit 'mode-line-face
		    :foreground "gray60")
(set-face-attribute 'mode-line-filename-face nil  ;; file name text
		    :inherit 'mode-line-face
		    :foreground "yellow"  ;;"#eab700" ;; yellow
		    :weight 'bold)
(set-face-attribute 'mode-line-position-face nil
		    :inherit 'mode-line-face
		    :family "Menlo" :height 100)
(set-face-attribute 'mode-line-mode-face nil  ;; mode text
		    :inherit 'mode-line-face
		    :foreground "DodgerBlue1") ;;"gray80")
(set-face-attribute 'mode-line-minor-mode-face nil
		    :inherit 'mode-line-mode-face
		    :foreground "gray40"
		    :height 110)

(set-face-attribute 'mode-line-process-face nil
		    :inherit 'mode-line-face
		    :foreground "#eeeeec") ;; light light gray
;; (set-face-attribute 'mode-line-process-face nil
;;                  :inherit 'mode-line-face
;;                  :foreground "#718c00") ;; OD greenish
(set-face-attribute 'mode-line-80col-face nil  ;; column 80 warning
		    :inherit 'mode-line-position-face
		    :foreground "black" :background "yellow")  ;;"#eab700")
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; (defvar my-mode-line-buffer-line-count nil)
;; (make-variable-buffer-local 'my-mode-line-buffer-line-count)


;; (setq-default mode-line-format
;;               '(
;;                 (:eval (propertize (when line-number-mode
;;                                      (let ((str "%4l"))
;;                                        (when (and (not (buffer-modified-p)) my-mode-line-buffer-line-count)
;;                                          (setq str (concat str "/" my-mode-line-buffer-line-count)))
;;                                        str)) face mode-line-position-face)

;;                        (:eval (propertize "%3c" 'face
;;                                           (if (>= (current-column) 81)
;;                                               'mode-line-80col-face
;;                                             'mode-line-position-face)))
;;                        )


;;                 (defun my-mode-line-count-lines ()
;;                   (setq my-mode-line-buffer-line-count (int-to-string (count-lines (point-min) (point-max)))))

;;                 (add-hook 'open-file-hook 'my-mode-line-count-lines)
;;                 (add-hook 'find-file-hook 'my-mode-line-count-lines)
;;                 (add-hook 'after-save-hook 'my-mode-line-count-lines)
;;                 (add-hook 'after-revert-hook 'my-mode-line-count-lines)
;;                 (add-hook 'dired-after-readin-hook 'my-mode-line-count-lines)






;; (defvar my-mode-line-buffer-line-count nil)
;; (make-variable-buffer-local 'my-mode-line-buffer-line-count)

;; (setq-default mode-line-format
;;               '("  " mode-line-modified
;;                 (list 'line-number-mode "  ")
;;                 (:eval (when line-number-mode
;;                          (let ((str "L%l"))
;;                            (when (and (not (buffer-modified-p)) my-mode-line-buffer-line-count)
;;                              (setq str (concat str "/" my-mode-line-buffer-line-count)))
;;                            str)))
;;                 "  %p"
;;                 (list 'column-number-mode "  C%c")
;;                 "  " mode-line-buffer-identification
;;                 "  " mode-line-modes))

;; (defun my-mode-line-count-lines ()
;;   (setq my-mode-line-buffer-line-count (int-to-string (count-lines (point-min) (point-max)))))

;; (add-hook 'find-file-hook 'my-mode-line-count-lines)
;; (add-hook 'after-save-hook 'my-mode-line-count-lines)
;; (add-hook 'after-revert-hook 'my-mode-line-count-lines)
;; (add-hook 'dired-after-readin-hook 'my-mode-line-count-lines)

EOF

print_title "CONFIG .emacs.d/my-modes.el  --------------------------------------"
cat > /home/edward/.emacs.d/my-modes.el << 'EOF'
;; my-modes.el
;; Info corresponding to setting and configuring modes
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(require 'cl-lib)
;; If you need Common Lisp extensions, use the cl-lib library rather than the old
;;  cl library. The latter does not use a clean namespace (i.e., its definitions
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;  do not start with a ‘cl-’ prefix). If your package loads cl at run time, that
;;  could cause name clashes for users who don't use that package.
;; There is no problem with using the cl package at compile time, with
;;  (eval-when-compile (require 'cl)). That's sufficient for using the macros in
;;  the cl package, because the compiler expands them before generating the
;;  byte-code. It is still better to use the more modern cl-lib, though.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; So please require cl-lib, not cl !!!
;; source: http://www.emacswiki.org/emacs/CommonLispForEmacs
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Auctex
;; Invoke the AUCTeX package (LaTeX support)
(require 'tex-site)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; ESS
(require 'ess-site)

;;(add-to-list 'load-path "/usr/share/emacs/site-lisp/ess/")
;;(load "ess-site")
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; FILE EXTENSIONS -> ACTIVATE VARIOUS MAJOR MODES
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(setq default-major-mode 'emacs-lisp-mode)

;; if first line of file matches, activate text-mode ? sh-mode??
(add-to-list 'magic-mode-alist '("#!/bin/bash". emacs-lisp-mode))

(setq auto-mode-alist
      (append
       ;; File name (within directory) starts with a dot.
       '(("/\\.[^/]*\\'" . emacs-lisp-mode)
	 ;; File name has no dot.
	 ("/[^\\./]*\\'" . emacs-lisp-mode)
	 ;; File name ends in ‘.C’.
	 ("\\.C\\'" . c++-mode)
	 ("\\.c\\'" . c-mode)
	 ("\\.h\\'" . c-mode)
	 ;; emacs file ftw
	 ("\\.el\\'" . emacs-lisp-mode)
	 ("\\.R\\'" . sh-mode)
	 ("\\.r\\'" . sh-mode))
       auto-mode-alist))


(add-hook 'text-mode-hook
	  '(lambda ()
	     (setq indent-tabs-mode nil)
	     (setq tab-width 4)
	     (setq indent-line-function (quote insert-tab))))

;;Handling Uncommon File Extensions
;(add-to-list 'auto-mode-alist '("\\.ext\\'" . text-mode))
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(add-to-list 'auto-mode-alist '("\\.pyx\\'" . python-mode))
(add-to-list 'auto-mode-alist '("\\.ppl\\'" . python-mode))
(add-to-list 'auto-mode-alist '("\\.pyw\\'" . python-mode))
(add-to-list 'auto-mode-alist '("\\.pyc\\'" . python-mode))
(add-to-list 'auto-mode-alist '("\\.py\\'"  . python-mode))
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Modes
;;
;; JavaScript Mode
;; js-mode defaults to using 4 spaces for indentation. Change it to 2
(defun js-custom ()
  "js-mode-hook"
  (setq js-indent-level 2))

(add-hook 'js-mode-hook 'js-custom)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;(org-babel-do-load-languages
;; 'org-babel-load-languages
;; '((R . t)))
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

EOF

print_title "CONFIG .emacs.d/my-packages.el  -----------------------------------"
cat > /home/edward/.emacs.d/my-packages.el << 'EOF'
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; ~/.emacs.d/my-packages.el
;(require 'cl-lib)
;; If you need Common Lisp extensions, use the cl-lib library rather than the old
;;  cl library. The latter does not use a clean namespace (i.e., its definitions
;;  do not start with a ‘cl-’ prefix). If your package loads cl at run time, that
;;  could cause name clashes for users who don't use that package.
;; There is no problem with using the cl package at compile time, with
;;  (eval-when-compile (require 'cl)). That's sufficient for using the macros in
;;  the cl package, because the compiler expands them before generating the
;;  byte-code. It is still better to use the more modern cl-lib, though.
;; So please require cl-lib, not cl !!!
;; source: http://www.emacswiki.org/emacs/CommonLispForEmacs
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; needed to read packages from 'elpa', ~/.emacs.d/elpa
(require 'package)


(add-to-list 'package-archives '("melpa" . "http://melpa.org/packages/") t)
(add-to-list 'package-archives
	     '("marmalade" . "http://marmalade-repo.org/packages/") t)
;(add-to-list 'package-archives
;             '("melpa-stable" . "http://stable.melpa.org/packages/") t)

(package-initialize)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(when (not package-archive-contents)
  (message "%s" "Refreshing package database...")
  (package-refresh-contents))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; If at some point, I have a bunch of non-built-in packages to work with
(defvar ebg-packages
  '(
    auctex
    ess
    autopair
    ac-R
    python-mode
    zenburn-theme
    auto-complete-auctex
    ))

(dolist (pkg ebg-packages)
  (when (and (not (package-installed-p pkg))
	   (assoc pkg package-archive-contents))
    (package-install pkg)))

(defun package-list-unaccounted-packages ()
;;  "Like `package-list-packages', but shows only the packages that
;;  are installed and are not in `ebg-packages'.  Useful for
;;  cleaning out unwanted packages."
  (interactive)
  (package-show-package-list
   (remove-if-not (lambda (x) (and (not (memq x ebg-packages))
			    (not (package-built-in-p x))
			    (package-installed-p x)))
		  (mapcar 'car package-archive-contents))))
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; TO BE USED WHEN CONFIGURING NEW MACHINE
;; (require 'cl)

;; ;; method to check if all packages are installed
;; (defun packages-installed-p ()
;;   (loop for pkg in ebg-packages
;;         when (not (package-installed-p pkg)) do (return nil)
;;         finally (return t)))

;; ;; if not all packages are installed, check one by one and install the missing ones.
;; (unless (packages-installed-p)
;;   ;; check for new packages (package versions)
;;   (message "%s" "Emacs is now refreshing its package database...")
;;   (package-refresh-contents)
;;   (message "%s" " done.")
;;   ;; install the missing packages
;;   (dolist (pkg ebg-packages)
;;     (when (not (package-installed-p pkg))
;;       (package-install pkg))))
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

EOF
}
##################################    emacs    ###############################


################################   final setup   ################################
install_final_setup(){

    # NEED TO CONFIG pacman.conf BEFORE WE CAN USE packer
    print_title "Finalize pacman.conf and other resources ----------------------"
    config_pacman.conf
    pause_function

    sudo pacman -Syy

    print_title "Dropbox from archfr? and Palemoon from packer -----------------"
    package_install "dropbox"
    pause_function

    packer -S palemoon-bin
    pause_function
}
################################   final setup   ################################

#############################    /etc/pacman.conf   ############################
config_pacman.conf(){

cat > /home/edward/pacman.conf << 'EOF'
#
# /etc/pacman.conf
#
# See the pacman.conf(5) manpage for option and repository directives

#
# GENERAL OPTIONS
#
[options]
# The following paths are commented out with their default values listed.
# If you wish to use different paths, uncomment and update the paths.
#RootDir     = /
#DBPath      = /var/lib/pacman/
#CacheDir    = /var/cache/pacman/pkg/
#LogFile     = /var/log/pacman.log
#GPGDir      = /etc/pacman.d/gnupg/
#XferCommand = /usr/bin/curl -C - -f %u > %o
#XferCommand = /usr/bin/wget --passive-ftp -c -O %o %u
#CleanMethod = KeepInstalled
#UseDelta    = 0._7
HoldPkg      = pacman glibc
CleanMethod  = KeepCurrent
Architecture = x86_64

# Pacman won't upgrade packages listed in IgnorePkg and members of IgnoreGroup
IgnorePkg   = linux linux-* acpi_call* jdk* jre* java-common dropbox palemoon thunderbird wayland nodejs mongodb evince atk zeitgeist dri3proto presentproto xf86-* xorg-* libx86emu
#IgnorePkg   = jdk* jre* java-common palemoon thunderbird nodejs mongodb zeitgeist

IgnorePkg   = iana-etc filesystem tzdata linux-api-headers binutils glibc gcc*

IgnoreGroup = repo-ebg
#NoUpgrade   =
#NoExtract   =/usr/lib/R/*

# Misc options
#UseSyslog
#TotalDownload
#VerbosePkgLists
Color
CheckSpace


# By default, pacman accepts packages signed by keys that its local keyring
# trusts (see pacman-key and its man page), as well as unsigned packages.
SigLevel          = Required DatabaseOptional
LocalFileSigLevel = Optional
#RemoteFileSigLevel = Required

# NOTE: You must run `pacman-key --init` before first using pacman; the local
# keyring can then be populated with the keys of all official Arch Linux
# packagers with `pacman-key --populate archlinux`.
#
# REPOSITORIES
#   - can be defined here or included from another file
#   - pacman will search repositories in the order defined here
#   - local/custom mirrors can be added here or in separate files
#   - repositories listed first will take precedence when packages
#     have identical names, regardless of version number
#   - URLs will have $repo replaced by the name of the current repo
#   - URLs will have $arch replaced by the name of the architecture
#
# Repository entries are of the format:
#       [repo-name]
#       Server = ServerName
#       Include = IncludePath
#
# The header [repo-name] is crucial - it must be present and
# uncommented to enable the repo.

# You can add preferred servers immediately
# after the header, and they will be used before the default mirrors.
[repo-ebg]
SigLevel = Optional TrustAll
Server = file:///home/edward/ARCH/repo-ebg/PACKAGES

[core]
SigLevel = PackageRequired
Include = /etc/pacman.d/mirrorlist

[extra]
SigLevel = PackageRequired
Include = /etc/pacman.d/mirrorlist

[community]
SigLevel = PackageRequired
Include = /etc/pacman.d/mirrorlist

# If you want to run 32 bit applications on your x86_64 system,
# enable the multilib repositories as required here.
#[multilib]
#SigLevel = PackageRequired
#Include = /etc/pacman.d/mirrorlist

[archlinuxfr]
SigLevel = Optional
Server=http://repo.archlinux.fr/$arch





EOF

sudo chown root:root ~/pacman.conf
sudo mv /etc/pacman.conf /etc/pacman.conf.orig
sudo mv ~/pacman.conf /etc
}
#############################    /etc/pacman.conf   ############################
